@{
    Layout = "~/Views/Shared/_RecruiterLayout.cshtml";
}

<style>
    :root {
        --primary-color: #4361ee;
        --secondary-color: #3f37c9;
        --accent-color: #4895ef;
        --light-color: #f8f9fa;
        --dark-color: #212529;
        --success-color: #4bb543;
        --error-color: #dc3545;
        --border-radius: 12px;
        --box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        --transition: all 0.3s ease;
    }

    .update-container {
        max-width: 800px;
        margin: 2rem auto;
        padding: 0 1rem;
    }

    .update-card {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        overflow: hidden;
        transition: var(--transition);
        border: none;
    }

    .update-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 2rem;
        text-align: center;
    }

    .update-title {
        font-weight: 700;
        font-size: 2rem;
        margin: 0;
    }

    .update-body {
        padding: 2rem;
    }

    .form-label {
        font-weight: 600;
        color: var(--dark-color);
        margin-bottom: 0.5rem;
        display: block;
    }

    .form-control {
        border: 2px solid #e9ecef;
        border-radius: var(--border-radius);
        padding: 0.75rem 1rem;
        font-size: 1rem;
        transition: var(--transition);
        height: auto;
        background-color: white;
        color: var(--dark-color);
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
    }

    .form-control:focus {
        border-color: var(--accent-color);
        box-shadow: 0 0 0 0.25rem rgba(72, 149, 239, 0.25);
        outline: none;
    }

    .form-control.is-valid {
        border-color: var(--success-color);
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%234bb543' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right calc(0.375em + 0.1875rem) center;
        background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    }

    .form-control.is-invalid {
        border-color: var(--error-color);
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right calc(0.375em + 0.1875rem) center;
        background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    }

    .invalid-feedback {
        display: none;
        color: var(--error-color);
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }

    .is-invalid ~ .invalid-feedback {
        display: block;
    }

    .select-wrapper {
        position: relative;
        display: block;
    }

    .select-wrapper::after {
        content: '\25BC';
        position: absolute;
        right: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: var(--dark-color);
        pointer-events: none;
        font-size: 0.8rem;
    }

    select.form-control {
        padding-right: 2.5rem;
        cursor: pointer;
        background-color: white;
        color: var(--dark-color) !important;
        width: 100%;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
    }

    select.form-control option {
        color: var(--dark-color);
        background-color: white;
    }

    select.form-control:focus {
        border-color: var(--accent-color);
        box-shadow: 0 0 0 0.25rem rgba(72, 149, 239, 0.25);
        color: var(--dark-color);
    }

    select.form-control:not(:placeholder-shown) {
        color: var(--dark-color) !important;
    }

    .btn-update {
        background: var(--primary-color);
        border: none;
        padding: 0.75rem 2rem;
        font-size: 1rem;
        font-weight: 600;
        border-radius: var(--border-radius);
        width: 100%;
        transition: var(--transition);
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .btn-update:hover {
        background: var(--secondary-color);
        transform: translateY(-2px);
    }

    .profile-pic-container {
        display: flex;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .profile-pic-preview {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        object-fit: cover;
        border: 3px solid var(--light-color);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-right: 1.5rem;
    }

    .file-upload-wrapper {
        position: relative;
        flex-grow: 1;
    }

    .file-upload-label {
        display: block;
        padding: 0.5rem 1rem;
        background: var(--light-color);
        border-radius: var(--border-radius);
        cursor: pointer;
        text-align: center;
        transition: var(--transition);
        border: 2px dashed #ced4da;
    }

    .file-upload-label:hover {
        background: #e9ecef;
    }

    .file-upload-input {
        position: absolute;
        left: 0;
        top: 0;
        opacity: 0;
        width: 100%;
        height: 100%;
        cursor: pointer;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .update-container {
            padding: 0 0.5rem;
        }

        .update-header {
            padding: 1.5rem;
        }

        .update-title {
            font-size: 1.5rem;
        }

        .update-body {
            padding: 1.5rem;
        }

        .profile-pic-container {
            flex-direction: column;
            align-items: flex-start;
        }

        .profile-pic-preview {
            margin-bottom: 1rem;
            margin-right: 0;
        }
    }

    /* Animation */
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .update-card {
        animation: fadeIn 0.5s ease-out;
    }

    /* SweetAlert customization */
    .swal2-confirm {
        background-color: var(--primary-color) !important;
        transition: var(--transition) !important;
    }

    .swal2-confirm:hover {
        background-color: var(--secondary-color) !important;
    }
</style>

<div class="update-container">
    <div class="update-card">
        <div class="update-header">
            <h1 class="update-title">Update Your Profile</h1>
        </div>
        <div class="update-body">
            <form id="updateForm" enctype="multipart/form-data">
                <input type="hidden" id="userId" name="userId" />

                <div class="mb-4">
                    <label for="r_fullname" class="form-label">Full Name</label>
                    <input type="text" id="r_fullname" name="fullName" class="form-control" required
                        placeholder="Enter your full name" />
                </div>

                <div class="mb-4">
                    <label for="r_phone" class="form-label">Phone Number</label>
                    <input type="tel" id="r_phone" name="phone" class="form-control" required
                        placeholder="Enter your phone number" maxlength="10" />
                    <div id="phoneFeedback" class="invalid-feedback"></div>
                </div>

                <div class="mb-4">
                    <label for="r_gender" class="form-label">Gender</label>
                    <div class="select-wrapper">
                        <select id="r_gender" name="gender" class="form-control" required>
                            <option value="" disabled selected>Select gender</option>
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                </div>

                <div class="mb-4">
                    <label class="form-label">Profile Image</label>
                    <div class="profile-pic-container">
                        <img id="profilePicPreview" src="https://via.placeholder.com/150" alt="Profile Preview"
                            class="profile-pic-preview">
                        <div class="file-upload-wrapper">
                            <label for="r_image" class="file-upload-label">
                                <span id="file-upload-text">Choose a profile picture</span>
                            </label>
                            <input type="file" id="r_image" name="profilePic" class="file-upload-input"
                                accept="image/*">
                            <input type="hidden" id="r_bypass_image" name="c_profileImage" />
                        </div>
                    </div>
                </div>

                <button type="submit" class="btn btn-update btn-primary mt-3">
                    <i class="fas fa-save me-2"></i>Update Profile
                </button>
            </form>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        const urlParams = new URLSearchParams(window.location.search);
        const userId = urlParams.get("id");
        $("#userId").val(userId);

        // Phone number validation function
        function validatePhoneNumber(phone) {
            const $phoneInput = $("#r_phone");
            const $phoneFeedback = $("#phoneFeedback");
            
            // Remove any non-digit characters
            phone = phone.replace(/\D/g, '');
            $phoneInput.val(phone);

            if (phone.length === 0) {
                $phoneInput.removeClass("is-valid is-invalid");
                $phoneFeedback.text("");
                return false;
            }

            if (!/^\d+$/.test(phone)) {
                $phoneInput.removeClass("is-valid").addClass("is-invalid");
                $phoneFeedback.text("Only numbers are allowed");
                return false;
            }

            if (phone.length < 10) {
                $phoneInput.removeClass("is-valid").addClass("is-invalid");
                $phoneFeedback.text("Phone number must be 10 digits");
                return false;
            }

            if (phone.length > 10) {
                $phoneInput.val(phone.slice(0, 10));
                phone = phone.slice(0, 10);
            }

            const phonePattern = /^\d{10}$/;
            if (phonePattern.test(phone)) {
                $phoneInput.removeClass("is-invalid").addClass("is-valid");
                $phoneFeedback.text("");
                return true;
            } else {
                $phoneInput.removeClass("is-valid").addClass("is-invalid");
                $phoneFeedback.text("Invalid phone number format");
                return false;
            }
        }

        // Real-time phone number validation
        $("#r_phone").on("input", function () {
            validatePhoneNumber($(this).val());
        });

        // Prevent non-numeric input
        $("#r_phone").on("keypress", function (e) {
            const charCode = e.which ? e.which : e.keyCode;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                e.preventDefault();
            }
        });

        $('#r_image').change(function () {
            const file = this.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    $('#profilePicPreview').attr('src', e.target.result);
                    $('#file-upload-text').text(file.name);
                }
                reader.readAsDataURL(file);
            }
        });

        // Force select element redraw
        function forceSelectRedraw($select) {
            const value = $select.val();
            $select.css('display', 'none').css('display', 'block');
            $select.val(value).trigger('change');
        }

        if (userId) {
            $.ajax({
                url: "http://localhost:5086/api/CompanyApi/getRecruiter?id=" + userId,
                type: "GET",
                success: function (data) {
                    console.log("Recruiter data:", data);
                    console.log("Gender value:", data.c_gender);
                    $("#r_fullname").val(data.c_fullName);
                    $("#r_phone").val(data.c_phoneNumber);
                    $("#r_gender").val(data.c_gender);
                    if (data.c_profileImage) {
                        $('#profilePicPreview').attr('src', data.c_profileImage);
                        $('#r_bypass_image').val(data.c_profileImage);
                        $('#file-upload-text').text('Current profile picture');
                    }
                    // Validate phone number after loading
                    validatePhoneNumber(data.c_phoneNumber);
                    // Force gender dropdown redraw
                    forceSelectRedraw($("#r_gender"));
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Error fetching recruiter details.'
                    });
                }
            });
        }

        // Ensure gender dropdown updates display
        $("#r_gender").on("change", function () {
            const $this = $(this);
            $this.css({
                'color': 'var(--dark-color)',
                'background-color': 'white'
            });
            // Force redraw to ensure display
            forceSelectRedraw($this);
        });

        $("#updateForm").submit(function (e) {
            e.preventDefault();

            // Final phone number validation before submission
            if (!validatePhoneNumber($("#r_phone").val())) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Phone Number',
                    text: 'Please enter a valid 10-digit phone number'
                });
                return;
            }

            // Ensure gender is selected
            if (!$("#r_gender").val()) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Selection',
                    text: 'Please select a gender'
                });
                return;
            }

            let formData = new FormData();
            formData.append("c_userId", $("#userId").val());
            formData.append("c_fullName", $("#r_fullname").val());
            formData.append("c_phoneNumber", $("#r_phone").val());
            formData.append("c_gender", $("#r_gender").val());

            let profilePic = $("#r_image")[0].files[0];
            if (profilePic) {
                formData.append("c_image", profilePic);
            } else {
                let existingImage = $("#r_bypass_image").val();
                if (existingImage) {
                    formData.append("c_profileImage", existingImage);
                }
            }

            $.ajax({
                url: "http://localhost:5086/api/UserDetails/UpdatePersonalDetail",
                type: "PUT",
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: response.message || 'Profile updated successfully!',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.href = "/RecruiterDashboard/Profile";
                    });
                },
                error: function (xhr) {
                    let errorMsg = "Error updating profile details.";
                    if (xhr.responseJSON && xhr.responseJSON.message) {
                        errorMsg = xhr.responseJSON.message;
                    }
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: errorMsg
                    });
                }
            });
        });
    });
</script>
