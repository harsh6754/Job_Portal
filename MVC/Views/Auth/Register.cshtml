@{
    Layout = "_AuthLayout";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<style>
    .role-btn {
        transition: background-color 0.3s, color 0.3s;
    }

    /* Default State */
    .role-btn.btn-outline-primary {
        background-color: white;
        color: #4361ee;
        border: 2px solid #4361ee;
    }

    /* Active (Selected) State */
    .role-btn.active {
        background-color: #4361ee !important;
        color: white !important;
        border: 2px solid #4361ee;
    }

    /* Hover Effect */
    .role-btn:hover {
        background-color: #364fc7 !important;
        color: white !important;
        border: 2px solid #364fc7;
    }

    .error {
        color: #dc3545 !important;
        font-size: 12px;
        margin-top: 0.25rem;
        display: block;
        position: absolute;
        left: 0;
    }

    .form-group {
        margin-bottom: 1.5rem;
        position: relative;
    }

    .input-group {
        position: relative;
        margin-bottom: 0.25rem;
    }

    .input-group-text {
        background-color: transparent;
        border-right: none;
    }

    .form-control {
        border-left: none;
        padding-left: 0;
    }

    .form-control:focus {
        border-color: #ced4da;
        box-shadow: none;
    }

    .input-group:focus-within {
        box-shadow: 0 0 0 0.2rem rgba(67, 97, 238, 0.25);
        border-radius: 0.25rem;
    }

    /* Add margin to form groups with errors */
    .form-group.has-error {
        margin-bottom: 2rem;
    }

    /* Fade-in animation */
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .login-right-wrapper {
        animation: fadeIn 0.8s ease-in-out;
    }

    .scrollable-container {
        max-height: 80vh;
        overflow-y: auto;
        padding-right: 10px;
        scrollbar-width: none;
        -ms-overflow-style: none;
    }

    .scrollable-container::-webkit-scrollbar {
        display: none;
    }

    .btn-primary {
        background-color: #4361ee !important;
        border-color: #4361ee !important;
    }

    .btn-primary:hover,
    .btn-primary:focus,
    .btn-primary:active {
        background-color: #364fc7 !important;
        border-color: #364fc7 !important;
    }

    .text-primary {
        color: #4361ee !important;
    }

    .text-primary:hover {
        color: #364fc7 !important;
    }

    /* File input styling */
    .form-group input[type="file"] {
        padding: 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        height: auto;
    }

    .form-group input[type="file"]::-webkit-file-upload-button {
        padding: 0.5rem 1rem;
        margin-right: 1rem;
        background-color: #4361ee;
        color: white;
        border: none;
        border-radius: 0.25rem;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .form-group input[type="file"]::-webkit-file-upload-button:hover {
        background-color: #364fc7;
    }

    /* Preview image container */
    #imagePreview {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        margin: 1rem auto;
        display: none;
        object-fit: cover;
        border: 3px solid #4361ee;
    }

    .temp {
        margin-bottom: 1rem;
    }

    /* Password strength indicator */
    .password-strength {
        height: 4px;
        width: 0;
        background: transparent;
        transition: width 0.3s, background 0.3s;
        margin-top: 0.25rem;
    }

    .password-container {
        position: relative;
    }

    .password-container .input-group {
        margin-bottom: 0;
    }

    /* Password toggle styling */
    .password-toggle {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: #6c757d;
        cursor: pointer;
        z-index: 5;
    }

    .password-toggle:hover {
        color: #4361ee;
    }
    .swal2-confirm{
        background-color: #4361ee;
    }
    .password-input-group {
        position: relative;
    }
</style>

<div class="login-right-wrapper border p-4 shadow-lg rounded">
    <div class="loginpage-box-wrapper">
        <h2 class="login-title text-dark font-bold text-center">Sign Up</h2>
        <div class="scrollable-container">
            <form enctype="multipart/form-data" id="registerForm">
                <div class="loginpage-box-content">
                    <!-- Role Selection -->
                    <div class="form-group text-center">
                        <button type="button" class="role-btn btn btn-outline-primary active" data-role="Candidate">
                            <i class="fas fa-user"></i> Candidate
                        </button>
                        <button type="button" class="role-btn btn btn-outline-primary" data-role="Recruiter">
                            <i class="fas fa-user-tie"></i> Recruiter
                        </button>
                        <input type="hidden" id="role" name="role" value="Candidate">
                    </div>

                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-user"></i></span>
                            <input type="text" class="form-control login-textbox" placeholder="Full Name"
                                id="registerfullname" name="registerfullName">
                        </div>
                        <label id="registerfullname-error" class="error" for="registerfullname"></label>
                    </div>

                    <div class="form-group temp">
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-user-tag"></i></span>
                            <input type="text" class="form-control login-textbox" placeholder="User Name"
                                id="registername" name="registername">
                        </div>
                        <div id="registername-error" class="error" for="registername"></div>
                    </div>

                    <div class="d-flex justify-content-between gap-2">
                        <div class="form-group w-100 temp">
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                <input type="email" class="form-control login-textbox" placeholder="Email"
                                    id="registerEmail" name="registerEmail">
                            </div>
                            <div id="registerEmail-error" class="error" for="registerEmail"></div>
                        </div>
                        <div class="form-group w-100 temp">
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-phone"></i></span>
                                <input type="text" class="form-control login-textbox" placeholder="Mobile Number"
                                    id="registerMobile" name="registerMobile">
                            </div>
                            <label id="registerMobile-error" class="error" for="registerMobile"></label>
                        </div>
                    </div>
                    <!-- Password Field -->
                    <div class="form-group temp password-container">
                        <div class="input-group password-input-group">
                            <span class="input-group-text"><i class="fas fa-lock"></i></span>
                            <input type="password" class="form-control login-textbox" placeholder="Password"
                                id="registerpwd" name="registerpwd">
                            <button type="button" class="password-toggle" id="togglePassword">
                                <i class="fas fa-eye-slash"></i> <!-- Changed from fa-eye to fa-eye-slash -->
                            </button>
                        </div>
                        <div class="password-strength" id="password-strength"></div>
                        <label id="registerpwd-error" class="error" for="registerpwd"></label>
                    </div>

                    <!-- Confirm Password Field -->
                    <div class="form-group temp">
                        <div class="input-group password-input-group">
                            <span class="input-group-text"><i class="fas fa-lock"></i></span>
                            <input type="password" class="form-control login-textbox" placeholder="Confirm Password"
                                id="register_cnf_pwd" name="register_cnf_pwd">
                            <button type="button" class="password-toggle" id="toggleConfirmPassword">
                                <i class="fas fa-eye-slash"></i>
                            </button>
                        </div>
                        <label id="register_cnf_pwd-error" class="error" for="register_cnf_pwd"></label>
                    </div>

                    <div class="form-group temp">
                        <div class="d-flex align-items-center">
                            <div class="form-control d-flex align-items-center">
                                <span class="me-2"><i class="fas fa-venus-mars"></i></span>
                                <input type="radio" id="male" name="gender" value="Male" class="k-radio">
                                <label for="male" class="k-radio-label me-3">Male</label>
                                <input type="radio" id="female" name="gender" value="Female" class="k-radio">
                                <label for="female" class="k-radio-label">Female</label>
                            </div>
                        </div>
                        <label id="gender-error" class="error" for="gender"></label>
                    </div>

                    <div class="form-group temp">
                        <div class="text-center mb-3">
                            <img id="imagePreview" class="d-none" alt="Profile Picture Preview">
                        </div>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-image"></i></span>
                            <input type="file" id="profilePic" name="profilePic" class="form-control" accept="image/*">
                        </div>
                        <small class="text-muted d-block mt-1">Upload your profile picture (Max size: 5MB)</small>
                    </div>

                    <div class="form-group pb-10">
                        <button type="submit" id="register"
                            class="btn btn-primary k-button w-100 loginbtn">Submit</button>
                    </div>

                    <div class="text-center">
                        <span class="text-dark font-medium">Have an account with us?</span>
                        <a asp-action="Login" class="forgot-pwd btn-link-trans font-medium text-dark text-primary">Login
                            here</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
<script>
    let emails = [], names = [];
    $.ajax({
                    url: "http://localhost:5086/api/AuthApi/GetUsersEmail",
                    type: "GET",
                    success: function (response) {
                        response.forEach((record)=>{
                            emails.push(record.Email);
                            names.push(record.Name);
                        });
                    },
                    error: function (xhr) {
                        Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: xhr.responseJSON?.message || "An error occurred during registration"
                        });
                    }
                });
    $('#registerEmail').change(function(){
        var email = $('#registerEmail').val();
        if(emails.includes(email))
        {
            $('#registerEmail-error').text('This email is already-taken');
            console.log("Taken");
        }
    });
    $('#registername').change(function(){
        var name = $('#registername').val();
        if(names.includes(name))
        {
            $('#registername-error').text('This Username is already-taken');
            console.log("Taken");
        }
    })
    $(document).ready(function () {
        // Add custom password validation method
        $.validator.addMethod("strongPassword", function (value, element) {
            // At least 6 characters
            if (value.length < 6) return false;

            // At least one uppercase letter
            if (!/[A-Z]/.test(value)) return false;

            // At least one lowercase letter
            if (!/[a-z]/.test(value)) return false;

            // At least one digit
            if (!/[0-9]/.test(value)) return false;

            // At least one special character
            if (!/[!@@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(value)) return false;

            return true;
        }, "Min 6 chars, 1 uppercase, 1 lowercase, 1 number, 1 symbol");

        // Role Selection
        $(".role-btn").click(function () {
            $(".role-btn").removeClass("active btn-primary").addClass("btn-outline-primary");
            $(this).addClass("active btn-primary").removeClass("btn-outline-primary");
            $("#role").val($(this).data("role"));
        });

        // jQuery Validation
        $("#registerForm").validate({
            rules: {
                registerfullName: { required: true },
                registername: { required: true },
                registerEmail: { required: true, email: true },
                registerMobile: { required: true, digits: true, minlength: 10, maxlength: 10 },
                registerpwd: {
                    required: true,
                    strongPassword: true
                },
                register_cnf_pwd: {
                    required: true,
                    equalTo: "#registerpwd"
                },
                gender: { required: true }
            },
            messages: {
                registerfullName: "Full Name is required",
                registername: "User Name is required",
                registerEmail: {
                    required: "Email is required",
                    email: "Enter a valid Email"
                },
                registerMobile: {
                    required: "Mobile number is required",
                    digits: "Enter only digits",
                    minlength: "Mobile number must be 10 digits",
                    maxlength: "Mobile number must be 10 digits"
                },
                registerpwd: {
                    required: "Password is required"
                },
                register_cnf_pwd: {
                    required: "Confirm Password is required",
                    equalTo: "Passwords do not match"
                },
                gender: "Select a gender"
            },
            highlight: function (element) {
                $(element).closest('.form-group').addClass('has-error');
            },
            unhighlight: function (element) {
                $(element).closest('.form-group').removeClass('has-error');
            },
            errorPlacement: function (error, element) {
                if (element.attr("name") == "gender") {
                    error.appendTo(element.closest('.form-group'));
                } else {
                    error.appendTo(element.closest('.form-group'));
                }
            },
            submitHandler: function (form, event) {
                event.preventDefault();
                console.log("Form submission triggered");

                let formData = new FormData();
                formData.append("c_fullName", $("#registerfullname").val());
                formData.append("c_username", $("#registername").val());
                formData.append("c_email", $("#registerEmail").val());
                formData.append("c_phoneNumber", $("#registerMobile").val());
                formData.append("c_password", $("#registerpwd").val());
                formData.append("c_gender", $("input[name='gender']:checked").val());
                formData.append("c_userRole", $("#role").val());

                let profilePic = $("#profilePic")[0].files[0];
                if (profilePic) {
                    formData.append("ProfilePic", profilePic);
                }

                $.ajax({
                    url: "http://localhost:5086/api/AuthApi/Register",
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: "success",
                                title: "Registration Successful",
                                text: "Please login to continue",
                                timer: 2000,
                                showConfirmButton: false
                            }).then(() => {
                                window.location.href = "/Auth/Login";
                            });
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: response.message
                            });
                        }
                    },
                    error: function (xhr) {
                        if (xhr.status === 400 && xhr.responseText.includes("Only PNG and JPG formats are allowed")) {
                            Swal.fire({
                                icon: "error",
                                title: "Invalid File Format",
                                text: "Only PNG and JPG formats are allowed!"
                            });
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Something went wrong",
                                text: "An error occurred. Please try again later."
                            });
                        }
                    }
                });
            }
        });

        // Image Preview Functionality
        $("#profilePic").change(function () {
            const file = this.files[0];
            const maxSize = 5 * 1024 * 1024; // 5MB

            if (file) {
                if (file.size > maxSize) {
                    Swal.fire({
                        icon: 'error',
                        title: 'File Too Large',
                        text: 'Please select an image less than 5MB'
                    });
                    this.value = '';
                    $('#imagePreview').addClass('d-none');
                    return;
                }

                if (!file.type.startsWith('image/')) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid File Type',
                        text: 'Please select an image file'
                    });
                    this.value = '';
                    $('#imagePreview').addClass('d-none');
                    return;
                }

                const reader = new FileReader();
                reader.onload = function (e) {
                    $('#imagePreview')
                        .attr('src', e.target.result)
                        .removeClass('d-none')
                        .css({
                            'max-width': '150px',
                            'max-height': '150px',
                            'border-radius': '50%',
                            'margin': '0 auto'
                        });
                };
                reader.readAsDataURL(file);
            } else {
                $('#imagePreview').addClass('d-none');
            }
        });

        $("#registerpwd").on("keyup", function () {
            const password = $(this).val();
            const strength = checkPasswordStrength(password);
            updateStrengthIndicator(strength);
        });

        function checkPasswordStrength(password) {
            let strength = 0;

            // Length >= 6
            if (password.length >= 6) strength++;

            // Contains uppercase
            if (/[A-Z]/.test(password)) strength++;

            // Contains lowercase
            if (/[a-z]/.test(password)) strength++;

            // Contains digit
            if (/[0-9]/.test(password)) strength++;

            // Contains special character
            if (/[!@@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(password)) strength++;

            return strength;
        }
        // Add this to your $(document).ready function
        // Password visibility toggle
        // Password visibility toggle
        $("#togglePassword").click(function () {
            const passwordInput = $("#registerpwd");
            const icon = $(this).find("i");

            if (passwordInput.attr("type") === "text") {
                passwordInput.attr("type", "password");
                icon.removeClass("fa-eye").addClass("fa-eye-slash");
            } else {
                passwordInput.attr("type", "text");
                icon.removeClass("fa-eye-slash").addClass("fa-eye");
            }
        });
        
        $("#toggleConfirmPassword").click(function () {
            const passwordInput = $("#register_cnf_pwd");
            const icon = $(this).find("i");

            if (passwordInput.attr("type") === "text") {
                passwordInput.attr("type", "password");
                icon.removeClass("fa-eye").addClass("fa-eye-slash");
            } else {
                passwordInput.attr("type", "text");
                icon.removeClass("fa-eye-slash").addClass("fa-eye");
            }
        });
        function updateStrengthIndicator(strength) {
            const $indicator = $("#password-strength");
            let width = "0%";
            let background = "transparent";

            switch (strength) {
                case 0:
                    width = "0%";
                    background = "transparent";
                    break;
                case 1:
                    width = "20%";
                    background = "red";
                    break;
                case 2:
                    width = "40%";
                    background = "orange";
                    break;
                case 3:
                    width = "60%";
                    background = "#ffcc00"; // yellow
                    break;
                case 4:
                    width = "80%";
                    background = "green";
                    break;
                case 5:
                    width = "100%";
                    background = "darkgreen";
                    break;
            }

            $indicator.css({
                "width": width,
                "background": background
            });
        }
    });
</script>