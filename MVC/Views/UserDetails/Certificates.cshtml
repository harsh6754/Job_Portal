@{
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    ViewData["Title"] = "Certificates";
}

<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

<style>
    :root {
        --primary-color: #4361ee;
        --primary-dark: #3a56d4;
        --secondary-color: #3f37c9;
        --accent-color: #4895ef;
        --danger-color: #f72585;
        --success-color: #4cc9f0;
        --light-color: #f8f9fa;
        --dark-color: #212529;
        --gray-color: #6c757d;
        --light-gray: #e9ecef;
        --border-radius: 12px;
        --box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
        --transition: all 0.3s ease;
    }

    .swal2-confirm {
        background-color: #4361ee;
    }

    .certificates-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 1.5rem;
    }

    .certificates-card {
        background: #fff;
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        overflow: hidden;
        transition: var(--transition);
    }

    .certificates-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.12);
    }

    .card-header {
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
        padding: 1.75rem 2rem;
        color: white;
        position: relative;
        overflow: hidden;
    }

    .btn-outline-info {
        background: rgba(88, 166, 74, 0.1);
        /* light green background */
        color: #58a64a;
        /* avocado green text */
        border: 1px solid rgba(88, 166, 74, 0.2);
        padding: 0.5rem 1rem;
        border-radius: 6px;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
        transition: all 0.3s ease;
        justify-content: center;
    }

    .btn-outline-info:hover {
        background: rgba(88, 166, 74, 0.2);
        border-color: rgba(88, 166, 74, 0.4);
        color: #3b7b33;
    }

    .card-header::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -50%;
        width: 100%;
        height: 200%;
        background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0) 70%);
        transform: rotate(30deg);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1.5rem;
        position: relative;
        z-index: 1;
    }

    .title-section {
        flex: 1;
    }

    .header-icon {
        font-size: 2rem;
        margin-bottom: 0.75rem;
        color: rgba(255, 255, 255, 0.9);
    }

    .certificates-title {
        font-size: 1.75rem;
        font-weight: 600;
        margin: 0;
        color: white;
    }

    .certificates-subtitle {
        font-size: 0.9rem;
        opacity: 0.9;
        margin-top: 0.25rem;
        font-weight: 300;
    }

    .add-certificate-btn {
        background: rgba(255, 255, 255, 0.15);
        border: 1px solid rgba(255, 255, 255, 0.3);
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 500;
        display: flex;
        align-items: center;
        transition: var(--transition);
        cursor: pointer;
        backdrop-filter: blur(5px);
        font-size: 0.95rem;
    }

    .add-certificate-btn:hover {
        background: rgba(255, 255, 255, 0.25);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .certificate-form-container {
        padding: 0;
        display: none;
        animation: fadeIn 0.4s ease-out;
    }

    .form-card {
        background: #fff;
        border-radius: 0 0 var(--border-radius) var(--border-radius);
        padding: 2rem;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
        border-top: 4px solid var(--primary-color);
    }

    .form-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .form-title {
        font-size: 1.35rem;
        color: var(--primary-color);
        margin: 0;
        display: flex;
        align-items: center;
        font-weight: 600;
    }

    .close-form-btn {
        background: none;
        border: none;
        color: var(--gray-color);
        font-size: 1.25rem;
        cursor: pointer;
        transition: var(--transition);
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
    }

    .close-form-btn:hover {
        background: var(--light-gray);
        color: var(--danger-color);
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        font-weight: 500;
        color: var(--gray-color);
        margin-bottom: 0.5rem;
        display: block;
    }

    .form-control {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 2px solid var(--light-gray);
        border-radius: 8px;
        font-size: 0.95rem;
        transition: var(--transition);
        background-color: #fff;
        font-family: 'Poppins', sans-serif;
    }

    .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);
        outline: none;
    }

    .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: 1rem;
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px solid var(--light-gray);
    }

    .upload-btn {
        background: var(--primary-color);
        color: white;
        border: none;
        padding: 0.75rem 1.75rem;
        border-radius: 8px;
        font-weight: 500;
        display: flex;
        align-items: center;
        transition: var(--transition);
        cursor: pointer;
        font-size: 0.95rem;
    }

    .upload-btn:hover {
        background: var(--primary-dark);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(67, 97, 238, 0.3);
    }

    .cancel-btn {
        background: #fff;
        color: var(--gray-color);
        border: 1px solid var(--light-gray);
        padding: 0.75rem 1.75rem;
        border-radius: 8px;
        font-weight: 500;
        display: flex;
        align-items: center;
        transition: var(--transition);
        cursor: pointer;
        font-size: 0.95rem;
    }

    .cancel-btn:hover {
        background: var(--light-gray);
        transform: translateY(-2px);
        color: var(--dark-color);
    }

    .certificates-list-container {
        padding: 1.5rem 2rem;
    }

    .certificates-list {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 1.5rem;
    }

    .certificate-item {
        background: #fff;
        border-radius: 10px;
        padding: 1.5rem;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        border-left: 4px solid var(--primary-color);
        transition: var(--transition);
        position: relative;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        height: 100%;
    }

    .certificate-item::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, rgba(67, 97, 238, 0.03) 0%, rgba(67, 97, 238, 0.01) 100%);
        z-index: 0;
    }

    .certificate-item:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
    }

    .certificate-header {
        display: flex;
        align-items: center;
        margin-bottom: 1rem;
        position: relative;
        z-index: 1;
    }

    .certificate-icon {
        font-size: 1.75rem;
        color: var(--primary-color);
        margin-right: 1rem;
        flex-shrink: 0;
    }

    .certificate-name {
        @* font-size: 1.1rem;
        font-weight: 600;
        color: var(--dark-color);
        margin: 0;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis; *@
        display: none;
    }

    .certificate-actions {
        display: flex;
        gap: 0.75rem;
        margin-top: 1.5rem;
        position: relative;
        z-index: 1;
    }

    .download-btn,
    .delete-btn {
        padding: 0.5rem 1rem;
        border-radius: 6px;
        font-size: 0.85rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
        transition: var(--transition);
        font-weight: 500;
        flex: 1;
        justify-content: center;
    }

    .download-btn {
        background: rgba(67, 97, 238, 0.1);
        color: var(--primary-color);
        border: 1px solid rgba(67, 97, 238, 0.2);
    }

    .download-btn:hover {
        background: rgba(67, 97, 238, 0.2);
        transform: translateY(-2px);
    }

    .delete-btn {
        background: rgba(220, 53, 69, 0.1);
        color: var(--danger-color);
        border: 1px solid rgba(220, 53, 69, 0.2);
    }

    .delete-btn:hover {
        background: rgba(220, 53, 69, 0.2);
        transform: translateY(-2px);
    }

    .empty-state {
        text-align: center;
        padding: 3rem 1rem;
        color: var(--gray-color);
        grid-column: 1 / -1;
    }

    .empty-icon-container {
        width: 80px;
        height: 80px;
        background: rgba(67, 97, 238, 0.1);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1.5rem;
    }

    .empty-icon {
        font-size: 2.5rem;
        color: var(--primary-color);
    }

    .empty-state h4 {
        font-size: 1.25rem;
        margin-bottom: 0.5rem;
        color: var(--dark-color);
        font-weight: 600;
    }

    .empty-state p {
        margin-bottom: 1.5rem;
        font-size: 0.95rem;
    }

    .empty-state-btn {
        background: var(--primary-color);
        color: white;
        border: none;
        padding: 0.75rem 1.75rem;
        border-radius: 8px;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        transition: var(--transition);
        cursor: pointer;
        font-size: 0.95rem;
    }

    .empty-state-btn:hover {
        background: var(--primary-dark);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(67, 97, 238, 0.3);
    }

    .file-preview {
        margin-top: 1rem;
        padding: 1rem;
        border: 1px dashed var(--light-gray);
        border-radius: 8px;
        text-align: center;
        display: none;
    }

    .file-preview.active {
        display: block;
    }

    .file-preview-icon {
        font-size: 2rem;
        color: var(--primary-color);
        margin-bottom: 0.5rem;
    }

    .file-preview-name {
        font-size: 0.9rem;
        color: var(--dark-color);
        word-break: break-all;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .certificate-item {
        animation: fadeIn 0.4s ease forwards;
    }

    .certificate-item:nth-child(1) {
        animation-delay: 0.1s;
    }

    .certificate-item:nth-child(2) {
        animation-delay: 0.2s;
    }

    .certificate-item:nth-child(3) {
        animation-delay: 0.3s;
    }

    .certificate-item:nth-child(4) {
        animation-delay: 0.4s;
    }

    @@media (max-width: 992px) {
        .certificates-container {
            padding: 0 1rem;
        }

        .certificates-list {
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        }
    }

    @@media (max-width: 768px) {
        .card-header {
            padding: 1.5rem;
        }

        .header-content {
            flex-direction: column;
            align-items: flex-start;
        }

        .add-certificate-btn {
            width: 100%;
            justify-content: center;
        }

        .certificate-form-container {
            padding: 0;
        }

        .form-card {
            padding: 1.5rem;
        }

        .form-actions {
            flex-direction: column;
        }

        .upload-btn,
        .cancel-btn {
            width: 100%;
            justify-content: center;
        }

        .certificates-list-container {
            padding: 1.25rem;
        }
    }

    @@media (max-width: 576px) {
        .certificates-title {
            font-size: 1.5rem;
        }

        .certificates-list {
            grid-template-columns: 1fr;
        }
    }
</style>

<div class="certificates-container">
    <div class="certificates-card">
        <!-- Card Header -->
        <div class="card-header">
            <div class="header-content">
                <i class="fas fa-certificate header-icon"></i>
                <div class="title-section">
                    <h2 class="certificates-title">My Certificates</h2>
                    <p class="certificates-subtitle">Upload and manage your professional certifications</p>
                </div>
                <button class="add-certificate-btn" onclick="showCertificateForm()">
                    <i class="fas fa-plus me-2"></i>Upload Certificate
                </button>
            </div>
        </div>

        <!-- Upload Certificate Form -->
        <div id="certificateForm" class="certificate-form-container">
            <div class="form-card">
                <div class="form-header">
                    <h4 class="form-title"><i class="fas fa-upload me-2"></i>Upload Certificate</h4>
                    <button class="close-form-btn" onclick="hideCertificateForm()">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                <input type="hidden" id="certificateId">

                <div class="form-group">
                    <label class="form-label">Certificate File*</label>
                    <input type="file" id="c_CertificateFilePath" class="form-control" accept="application/pdf, image/*"
                        onchange="showFilePreview(this)">
                    <div id="filePreview" class="file-preview">
                        <i class="fas fa-file-alt file-preview-icon"></i>
                        <div class="file-preview-name">No file selected</div>
                    </div>
                </div>

                <div class="form-actions">
                    <button class="cancel-btn" onclick="hideCertificateForm()">
                        <i class="fas fa-times me-2"></i>Cancel
                    </button>
                    <button class="upload-btn" onclick="uploadCertificate()">
                        <i class="fas fa-upload me-2"></i>Upload
                    </button>
                </div>
            </div>
        </div>

        <!-- Certificates List -->
        <div class="certificates-list-container">
            <div id="certificateList" class="certificates-list">
                <!-- Dynamic content will be inserted here -->
                <div class="empty-state">
                    <div class="empty-icon-container">
                        <i class="fas fa-certificate empty-icon"></i>
                    </div>
                    <h4>No Certificates Added Yet</h4>
                    <p>Upload your professional certifications to showcase your achievements</p>
                    <button class="empty-state-btn" onclick="showCertificateForm()">
                        <i class="fas fa-plus me-2"></i>Upload First Certificate
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function getUserIdFromToken() {
            let token = localStorage.getItem("token");
            if (!token) return null;
            let payload = JSON.parse(atob(token.split('.')[1]));
            return payload.uid;
        }

        var userId = getUserIdFromToken();

        $(document).ready(function () {
            loadCertificates();
        });

        function showFilePreview(input) {
            const filePreview = document.getElementById('filePreview');
            const fileName = document.querySelector('.file-preview-name');

            if (input.files && input.files[0]) {
                filePreview.classList.add('active');
                fileName.textContent = input.files[0].name;
            } else {
                filePreview.classList.remove('active');
                fileName.textContent = 'No file selected';
            }
        }

        function showCertificateForm() {
            $("#certificateForm").show();
            $('html, body').animate({
                scrollTop: $("#certificateForm").offset().top - 20
            }, 300);
        }

        function hideCertificateForm() {
            $("#certificateForm").hide();
            $("#c_CertificateFilePath").val("");
            document.getElementById('filePreview').classList.remove('active');
        }

        function uploadCertificate() {
            let fileInput = document.getElementById("c_CertificateFilePath");

            if (!fileInput || fileInput.files.length === 0) {
                Swal.fire({
                    title: "No File Selected",
                    text: "Please select a certificate file to upload",
                    icon: "warning",
                    confirmButtonColor: "#4361ee"
                });
                return;
            }

            const file = fileInput.files[0];
            const validTypes = ['application/pdf', 'image/jpeg', 'image/png'];

            if (!validTypes.includes(file.type)) {
                Swal.fire({
                    title: "Invalid File Type",
                    text: "Please upload a PDF, JPEG, or PNG file",
                    icon: "warning",
                    confirmButtonColor: "#4361ee"
                });
                return;
            }

            if (file.size > 5 * 1024 * 1024) { // 5MB limit
                Swal.fire({
                    title: "File Too Large",
                    text: "Please upload a file smaller than 5MB",
                    icon: "warning",
                    confirmButtonColor: "#4361ee"
                });
                return;
            }

            Swal.fire({
                title: "Confirm Upload",
                text: `Are you sure you want to upload "${file.name}"?`,
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: "#4361ee",
                cancelButtonColor: "#6c757d",
                confirmButtonText: "Yes, upload it!",
                cancelButtonText: "Cancel"
            }).then((result) => {
                if (result.isConfirmed) {
                    let formData = new FormData();
                    formData.append("c_user_id", userId);
                    formData.append("c_certificate", file);
                    formData.append("c_certificate_name", file.name);

                    // Show loading state
                    $("#certificateList").html(`
                                <div class="loading-state">
                                    <div class="loading-spinner"></div>
                                </div>
                            `);

                    $.ajax({
                        url: "http://localhost:5086/api/UserDetails/AddUserCertificate",
                        type: "POST",
                        data: formData,
                        contentType: false,
                        processData: false,
                        success: function () {
                            Swal.fire({
                                title: "Success!",
                                text: "Certificate uploaded successfully",
                                icon: "success",
                                timer: 1500,
                                showConfirmButton: false
                            });
                            loadCertificates();
                            hideCertificateForm();
                        },
                        error: function (xhr) {
                            let errorMessage = "Failed to upload certificate";
                            if (xhr.responseJSON && xhr.responseJSON.message) {
                                errorMessage = xhr.responseJSON.message;
                            }
                            Swal.fire({
                                title: "Error!",
                                text: errorMessage,
                                icon: "error",
                                confirmButtonColor: "#4361ee"
                            });
                            loadCertificates();
                        }
                    });
                }
            });
        }

        function loadCertificates() {
            // Show loading state
            $("#certificateList").html(`
            <div class="loading-state">
            <div class="loading-spinner"></div>
            </div>
            `);

            $.ajax({
            url: `http://localhost:5086/api/UserDetails/GetUserCertificate?id=${userId}`,
            type: "GET",
            success: function (response) {
                let certificateList = $("#certificateList");
                certificateList.empty();

                if (!response || response.length === 0) {
                certificateList.html(`
                <div class="empty-state">
                <div class="empty-icon-container">
                <i class="fas fa-certificate empty-icon"></i>
                </div>
                <h4>No Certificates Added Yet</h4>
                <p>Upload your professional certifications to showcase your achievements</p>
                <button class="empty-state-btn" onclick="showCertificateForm()">
                <i class="fas fa-plus me-2"></i>Upload First Certificate
                </button>
                </div>
                `);
                return;
                }

                // Sort certificates by upload date (newest first)
                response.sort((a, b) => new Date(b.c_UploadDate) - new Date(a.c_UploadDate));

                response.forEach(function (certificate) {
                let fileName = certificate.c_CertificateFilePath.split('/').pop();
                let encodedFilePath = encodeURIComponent(certificate.c_CertificateFilePath);
                let fileExtension = fileName.split('.').pop().toLowerCase();

                let thumbnail = "";
                if (fileExtension === "pdf") {
                    thumbnail = `<i class="fas fa-file-pdf certificate-icon" style="font-size: 2rem; color: var(--primary-color);"></i>`;
                } else if (["jpg", "jpeg", "png", "gif"].includes(fileExtension)) {
                    thumbnail = `<img src="/user_certificate/${encodedFilePath}" alt="${fileName}" class="certificate-thumbnail" style="max-width: 100%; height: 250px; border-radius: 8px;" />`;
                } else {
                    thumbnail = `<i class="fas fa-file-alt certificate-icon" style="font-size: 2rem; color: var(--primary-color);"></i>`;
                }

                let certCard = `
                <div class="certificate-item" style="border: 1px solid var(--light-gray); padding: 1.2rem; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
                <div class="certificate-header" style="display: flex; align-items: center; margin-bottom: 1rem;">
                ${thumbnail}
                <h3 class="certificate-name" title="${fileName}" style="margin-left: 1rem; font-size: 1.2rem; font-weight: 600; color: var(--dark-color);">${fileName}</h3>
                </div>
                <div class="certificate-actions" style="display: flex; gap: 0.5rem; margin-top: 1rem;">
                <button class="download-btn" onclick="downloadCertificate('${encodedFilePath}')" style="flex: 1; padding: 0.6rem; border-radius: 6px; background: var(--primary-color); color: white; border: none; cursor: pointer; transition: var(--transition);">
                <i class="fas fa-download"></i> Download
                </button>
                <button class="delete-btn" onclick="deleteCertificate(${certificate.c_CertificationID})" style="flex: 1; padding: 0.6rem; border-radius: 6px; background: var(--danger-color); color: white; border: none; cursor: pointer; transition: var(--transition);">
                <i class="fas fa-trash-alt"></i> Delete
                </button>
                <button class="btn btn-outline-info btn-sm px-3" onclick="previewCertificate('${encodedFilePath}')" style="flex: 1; padding: 0.6rem; border-radius: 6px; background: rgba(88, 166, 74, 0.1); color: #58a64a; border: 1px solid rgba(88, 166, 74, 0.2); cursor: pointer; transition: var(--transition);">
                <i class="fas fa-eye me-1"></i> Preview
                </button>
                </div>
                </div>
                `;
                certificateList.append(certCard);
                });
            },
            error: function () {
                $("#certificateList").html(`
                <div class="alert alert-danger">
                Error loading certificates. Please try again later.
                </div>
                `);
            }
            });
        }

        function downloadCertificate(filePath) {
            if (!filePath) {
                Swal.fire({
                    title: "Error",
                    text: "Invalid file path",
                    icon: "error",
                    confirmButtonColor: "#4361ee"
                });
                return;
            }

            Swal.fire({
                title: "Download Certificate",
                text: "Do you want to download this certificate?",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: "#4361ee",
                cancelButtonColor: "#6c757d",
                confirmButtonText: "Download",
                cancelButtonText: "Cancel"
            }).then((result) => {
                if (result.isConfirmed) {
                    const decodedPath = decodeURIComponent(filePath);
                    const fileName = decodedPath.split('/').pop();
                    const downloadUrl = `${window.location.origin}/user_certificate/${filePath}`;

                    // Create temporary link for download
                    const link = document.createElement('a');
                    link.href = downloadUrl;
                    link.setAttribute('download', fileName);
                    link.setAttribute('target', '_blank');
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);

                    Swal.fire({
                        title: "Download Started",
                        text: "Your certificate download has begun",
                        icon: "success",
                        timer: 1500,
                        showConfirmButton: false
                    });
                }
            });
        }
        function previewCertificate(filePath) {
            if (!filePath) {
                Swal.fire({
                    title: "Error",
                    text: "Invalid file path. Unable to preview certificate.",
                    icon: "error"
                });
                return;
            }

            let fullPath = window.location.origin + `/user_certificate/${filePath}`;
            window.open(fullPath, "_blank");
        }
        function deleteCertificate(id) {
            if (!id) {
                Swal.fire({
                    title: "Error",
                    text: "Invalid certificate ID",
                    icon: "error",
                    confirmButtonColor: "#4361ee"
                });
                return;
            }

            Swal.fire({
                title: "Delete Certificate",
                text: "Are you sure you want to delete this certificate? This action cannot be undone.",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#4361ee",
                cancelButtonColor: "#6c757d",
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "Cancel"
            }).then((result) => {
                if (result.isConfirmed) {
                    // Show loading state
                    $("#certificateList").html(`
                                <div class="loading-state">
                                    <div class="loading-spinner"></div>
                                </div>
                            `);

                    $.ajax({
                        url: `http://localhost:5086/api/UserDetails/DeleteUserCertificate/${id}`,
                        type: "DELETE",
                        success: function () {
                            Swal.fire({
                                title: "Deleted!",
                                text: "The certificate has been deleted",
                                icon: "success",
                                timer: 1500,
                                showConfirmButton: false
                            });
                            loadCertificates();
                        },
                        error: function () {
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to delete certificate",
                                icon: "error",
                                confirmButtonColor: "#4361ee"
                            });
                            loadCertificates();
                        }
                    });
                }
            });
        }
    </script>
}