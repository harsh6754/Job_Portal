@{
    Layout = "~/Views/Shared/_NewLayout.cshtml";
    ViewData["Title"] = "Projects";
}

<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

<style>
    :root {
        --primary-color: #4361ee;
        --primary-dark: #3a56d4;
        --secondary-color: #3f37c9;
        --accent-color: #4895ef;
        --danger-color: #f72585;
        --success-color: #4cc9f0;
        --light-color: #f8f9fa;
        --dark-color: #212529;
        --gray-color: #6c757d;
        --light-gray: #e9ecef;
        --border-radius: 12px;
        --box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
        --transition: all 0.3s ease;
    }

    .projects-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 1.5rem;
    }

    .projects-card {
        background: #fff;
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        overflow: hidden;
        transition: var(--transition);
    }

    .projects-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.12);
    }

    .card-header {
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
        padding: 1.75rem 2rem;
        color: white;
        position: relative;
        overflow: hidden;
    }

    .card-header::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -50%;
        width: 100%;
        height: 200%;
        background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0) 70%);
        transform: rotate(30deg);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1.5rem;
        position: relative;
        z-index: 1;
    }

    .title-section {
        flex: 1;
    }

    .header-icon {
        font-size: 2rem;
        margin-bottom: 0.75rem;
        color: rgba(255, 255, 255, 0.9);
    }

    .projects-title {
        font-size: 1.75rem;
        font-weight: 600;
        margin: 0;
        color: white;
    }

    .projects-subtitle {
        font-size: 0.9rem;
        opacity: 0.9;
        margin-top: 0.25rem;
        font-weight: 300;
    }

    .add-project-btn {
        background: rgba(255, 255, 255, 0.15);
        border: 1px solid rgba(255, 255, 255, 0.3);
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 500;
        display: flex;
        align-items: center;
        transition: var(--transition);
        cursor: pointer;
        backdrop-filter: blur(5px);
        font-size: 0.95rem;
    }

    .add-project-btn:hover {
        background: rgba(255, 255, 255, 0.25);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .project-form-container {
        padding: 0;
        display: none;
        animation: fadeIn 0.4s ease-out;
    }

    .form-card {
        background: #fff;
        border-radius: 0 0 var(--border-radius) var(--border-radius);
        padding: 2rem;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
        border-top: 4px solid var(--primary-color);
    }

    .form-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .form-title {
        font-size: 1.35rem;
        color: var(--primary-color);
        margin: 0;
        display: flex;
        align-items: center;
        font-weight: 600;
    }

    .close-form-btn {
        background: none;
        border: none;
        color: var(--gray-color);
        font-size: 1.25rem;
        cursor: pointer;
        transition: var(--transition);
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
    }

    .close-form-btn:hover {
        background: var(--light-gray);
        color: var(--danger-color);
    }

    .form-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .form-group {
        position: relative;
        margin-bottom: 1rem;
    }

    .floating-label-group {
        position: relative;
    }

    .form-input {
        width: 100%;
        padding: 1rem;
        border: 2px solid var(--light-gray);
        border-radius: 8px;
        font-size: 0.95rem;
        transition: var(--transition);
        height: 56px;
        background-color: #fff;
        font-family: 'Poppins', sans-serif;
    }

    textarea.form-input {
        min-height: 120px;
        resize: vertical;
    }

    .form-input:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);
        outline: none;
    }

    .form-label {
        font-weight: 500;
        color: var(--gray-color);
        margin-bottom: 0.5rem;
        display: block;
    }

    .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: 1rem;
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px solid var(--light-gray);
    }

    .save-btn {
        background: var(--primary-color);
        color: white;
        border: none;
        padding: 0.75rem 1.75rem;
        border-radius: 8px;
        font-weight: 500;
        display: flex;
        align-items: center;
        transition: var(--transition);
        cursor: pointer;
        font-size: 0.95rem;
    }

    .save-btn:hover {
        background: var(--primary-dark);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(67, 97, 238, 0.3);
    }

    .cancel-btn {
        background: #fff;
        color: var(--gray-color);
        border: 1px solid var(--light-gray);
        padding: 0.75rem 1.75rem;
        border-radius: 8px;
        font-weight: 500;
        display: flex;
        align-items: center;
        transition: var(--transition);
        cursor: pointer;
        font-size: 0.95rem;
    }

    .cancel-btn:hover {
        background: var(--light-gray);
        transform: translateY(-2px);
        color: var(--dark-color);
    }

    .projects-list-container {
        padding: 1.5rem 2rem;
    }

    .projects-list {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 1.5rem;
    }

    .project-item {
        background: #fff;
        border-radius: 10px;
        padding: 1.5rem;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        border-left: 4px solid var(--primary-color);
        transition: var(--transition);
        position: relative;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        height: 100%;
    }

    .project-item::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, rgba(67, 97, 238, 0.03) 0%, rgba(67, 97, 238, 0.01) 100%);
        z-index: 0;
    }

    .project-item:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
    }

    .project-header {
        margin-bottom: 1rem;
        position: relative;
        z-index: 1;
    }

    .project-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--primary-color);
        margin: 0 0 0.5rem 0;
    }

    .project-details {
        flex: 1;
        position: relative;
        z-index: 1;
    }

    .detail-item {
        margin-bottom: 0.75rem;
    }

    .detail-label {
        font-weight: 500;
        color: var(--gray-color);
        font-size: 0.9rem;
    }

    .detail-value {
        color: var(--dark-color);
        font-weight: 400;
        margin-top: 0.25rem;
    }

    .project-link {
        color: var(--primary-color);
        text-decoration: none;
        transition: var(--transition);
        word-break: break-all;
    }

    .project-link:hover {
        color: var(--primary-dark);
        text-decoration: underline;
    }

    .project-actions {
        display: flex;
        gap: 0.75rem;
        margin-top: 1.5rem;
        position: relative;
        z-index: 1;
    }

    .edit-btn,
    .delete-btn {
        padding: 0.5rem 1rem;
        border-radius: 6px;
        font-size: 0.85rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
        transition: var(--transition);
        font-weight: 500;
    }

    .edit-btn {
        background: rgba(67, 97, 238, 0.1);
        color: var(--primary-color);
        border: 1px solid rgba(67, 97, 238, 0.2);
    }

    .edit-btn:hover {
        background: rgba(67, 97, 238, 0.2);
        transform: translateY(-2px);
    }

    .delete-btn {
        background: rgba(220, 53, 69, 0.1);
        color: var(--danger-color);
        border: 1px solid rgba(220, 53, 69, 0.2);
    }

    .delete-btn:hover {
        background: rgba(220, 53, 69, 0.2);
        transform: translateY(-2px);
    }

    .empty-state {
        text-align: center;
        padding: 3rem 1rem;
        color: var(--gray-color);
        grid-column: 1 / -1;
    }

    .empty-icon-container {
        width: 80px;
        height: 80px;
        background: rgba(67, 97, 238, 0.1);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1.5rem;
    }

    .empty-icon {
        font-size: 2.5rem;
        color: var(--primary-color);
    }

    .empty-state h4 {
        font-size: 1.25rem;
        margin-bottom: 0.5rem;
        color: var(--dark-color);
        font-weight: 600;
    }

    .empty-state p {
        margin-bottom: 1.5rem;
        font-size: 0.95rem;
    }

    .empty-state-btn {
        background: var(--primary-color);
        color: white;
        border: none;
        padding: 0.75rem 1.75rem;
        border-radius: 8px;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        transition: var(--transition);
        cursor: pointer;
        font-size: 0.95rem;
    }

    .swal2-confirm {
        background-color: #4361ee;
    }

    .empty-state-btn:hover {
        background: var(--primary-dark);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(67, 97, 238, 0.3);
    }

    .tech-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-top: 0.25rem;
    }

    .tech-tag {
        background: rgba(67, 97, 238, 0.1);
        color: var(--primary-color);
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 500;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes slideIn {
        from {
            opacity: 0;
            transform: translateX(20px);
        }

        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    .project-item {
        animation: fadeIn 0.4s ease forwards;
    }

    .project-item:nth-child(1) {
        animation-delay: 0.1s;
    }

    .project-item:nth-child(2) {
        animation-delay: 0.2s;
    }

    .project-item:nth-child(3) {
        animation-delay: 0.3s;
    }

    .project-item:nth-child(4) {
        animation-delay: 0.4s;
    }

    .detail-item {
        animation: slideIn 0.5s ease forwards;
    }

    @@media (max-width: 992px) {
        .projects-container {
            padding: 0 1rem;
        }

        .projects-list {
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        }
    }

    @@media (max-width: 768px) {
        .card-header {
            padding: 1.5rem;
        }

        .header-content {
            flex-direction: column;
            align-items: flex-start;
        }

        .add-project-btn {
            width: 100%;
            justify-content: center;
        }

        .project-form-container {
            padding: 0;
        }

        .form-card {
            padding: 1.5rem;
        }

        .form-grid {
            grid-template-columns: 1fr;
        }

        .form-actions {
            flex-direction: column;
        }

        .save-btn,
        .cancel-btn {
            width: 100%;
            justify-content: center;
        }

        .projects-list-container {
            padding: 1.25rem;
        }
    }

    @@media (max-width: 576px) {
        .projects-title {
            font-size: 1.5rem;
        }

        .projects-list {
            grid-template-columns: 1fr;
        }

        .project-actions {
            flex-direction: column;
        }

        .edit-btn,
        .delete-btn {
            width: 100%;
            justify-content: center;
        }
    }
</style>

<div class="projects-container">
    <div class="projects-card">
        <!-- Card Header -->
        <div class="card-header">
            <div class="header-content">
                <i class="fas fa-code header-icon"></i>
                <div class="title-section">
                    <h2 class="projects-title">My Projects</h2>
                    <p class="projects-subtitle">Showcase your development work and contributions</p>
                </div>
                <button class="add-project-btn" onclick="showProjectForm()">
                    <i class="fas fa-plus me-2"></i>Add Project
                </button>
            </div>
        </div>

        <!-- Project Form -->
        <div id="projectForm" class="project-form-container">
            <div class="form-card">
                <div class="form-header">
                    <h4 class="form-title"><i class="fas fa-code-branch me-2"></i>Add New Project</h4>
                    <button class="close-form-btn" onclick="hideProjectForm()">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                <input type="hidden" id="projectid">

                <div class="form-grid">
                    <div class="form-group">
                        <label class="form-label">Project Title*</label>
                        <input type="text" id="projectTitle" class="form-input" placeholder="Enter project title">
                    </div>

                    <div class="form-group">
                        <label class="form-label">Technologies Used*</label>
                        <input type="text" id="technologiesUsed" class="form-input"
                            placeholder="JavaScript, React, Node.js (comma separated)">
                    </div>

                    <div class="form-group">
                        <label class="form-label">Project Description*</label>
                        <textarea id="projectDescription" class="form-input"
                            placeholder="Describe your project, features, and your role" rows="4"></textarea>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Project Link*</label>
                        <input type="url" id="projectLink" class="form-input" placeholder="https://yourproject.com">
                    </div>
                </div>

                <div class="form-actions">
                    <button class="cancel-btn" onclick="hideProjectForm()">
                        <i class="fas fa-times me-2"></i>Cancel
                    </button>
                    <button class="save-btn" onclick="addProject()">
                        <i class="fas fa-save me-2"></i>Save Project
                    </button>
                </div>
            </div>
        </div>

        <!-- Projects List -->
        <div class="projects-list-container">
            <div id="projectList" class="projects-list">
                <!-- Dynamic content will be inserted here -->
                <div class="empty-state">
                    <div class="empty-icon-container">
                        <i class="fas fa-code empty-icon"></i>
                    </div>
                    <h4>No Projects Added Yet</h4>
                    <p>Showcase your work by adding your first project</p>
                    <button class="empty-state-btn" onclick="showProjectForm()">
                        <i class="fas fa-plus me-2"></i>Add First Project
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function getUserIdFromToken() {
            let token = localStorage.getItem("token");
            if (!token) return null;
            let payload = JSON.parse(atob(token.split('.')[1]));
            return payload.uid;
        }

        var userId = getUserIdFromToken();

        $(document).ready(function () {
            loadProjects();
        });

        function showProjectForm() {
            $("#projectForm").show();
            $('html, body').animate({
                scrollTop: $("#projectForm").offset().top - 20
            }, 300);
        }

        function hideProjectForm() {
            $("#projectForm").hide();
            clearProjectForm();
            // Reset button back to "Add Project" if it was changed to "Update"
            $(".save-btn").attr("onclick", "addProject()").html('<i class="fas fa-save me-2"></i>Save Project');
        }

        function clearProjectForm() {
            $("#projectid").val("");
            $("#projectTitle").val("");
            $("#projectDescription").val("");
            $("#technologiesUsed").val("");
            $("#projectLink").val("");
        }

        function addProject() {
            let projectTitle = $("#projectTitle").val().trim();
            let projectDescription = $("#projectDescription").val().trim();
            let technologiesUsed = $("#technologiesUsed").val().trim();
            let projectLink = $("#projectLink").val().trim();

            // Validation
            if (!projectTitle || !projectDescription || !technologiesUsed || !projectLink) {
                Swal.fire({
                    title: "Missing Information",
                    text: "Please fill in all required fields",
                    icon: "warning",
                    confirmButtonColor: "#4361ee"
                });
                return;
            }

            // Validate URL format
            try {
                new URL(projectLink);
            } catch (e) {
                Swal.fire({
                    title: "Invalid URL",
                    text: "Please enter a valid project URL (e.g., https://yourproject.com)",
                    icon: "warning",
                    confirmButtonColor: "#4361ee"
                });
                return;
            }

            let formData = new FormData();
            formData.append("c_user_id", userId);
            formData.append("c_Project_Title", projectTitle);
            formData.append("c_Project_Description", projectDescription);
            formData.append("c_TechnologiesUsed", technologiesUsed);
            formData.append("c_ProjectLink", projectLink);

            // Show loading state
            $("#projectList").html(`
                    <div class="loading-state">
                        <div class="loading-spinner"></div>
                    </div>
                `);

            $.ajax({
                url: "http://localhost:5086/api/UserDetails/AddUserProjects",
                type: "POST",
                data: formData,
                contentType: false,
                processData: false,
                success: function () {
                    Swal.fire({
                        title: "Success!",
                        text: "Project added successfully",
                        icon: "success",
                        timer: 1500,
                        showConfirmButton: false
                    });
                    loadProjects();
                    hideProjectForm();
                },
                error: function () {
                    Swal.fire({
                        title: "Error!",
                        text: "Failed to add project. Please try again.",
                        icon: "error",
                        confirmButtonColor: "#4361ee"
                    });
                    loadProjects();
                }
            });
        }

        function loadProjects() {
            // Show loading state
            $("#projectList").html(`
                    <div class="loading-state">
                        <div class="loading-spinner"></div>
                    </div>
                `);

            $.ajax({
                url: `http://localhost:5086/api/UserDetails/GetUserProject?id=${userId}`,
                type: "GET",
                success: function (response) {
                    let projectList = $("#projectList");
                    projectList.empty();

                    if (response.length === 0) {
                        projectList.html(`
                                <div class="empty-state">
                                    <div class="empty-icon-container">
                                        <i class="fas fa-code empty-icon"></i>
                                    </div>
                                    <h4>No Projects Added Yet</h4>
                                    <p>Showcase your work by adding your first project</p>
                                    <button class="empty-state-btn" onclick="showProjectForm()">
                                        <i class="fas fa-plus me-2"></i>Add First Project
                                    </button>
                                </div>
                            `);
                        return;
                    }

                    // Sort projects by title (optional)
                    response.sort((a, b) => a.c_Project_Title.localeCompare(b.c_Project_Title));

                    response.forEach(function (project) {
                        // Create tech tags from comma-separated technologies
                        let techTags = project.c_TechnologiesUsed.split(',').map(tech =>
                            `<span class="tech-tag">${tech.trim()}</span>`
                        ).join('');

                        let card = `
                                <div class="project-item">
                                    <div class="project-header">
                                        <h3 class="project-title">${project.c_Project_Title}</h3>
                                    </div>
                                    <div class="project-details">
                                        <div class="detail-item">
                                            <div class="detail-label">Technologies Used</div>
                                            <div class="tech-tags">${techTags}</div>
                                        </div>
                                        <div class="detail-item">
                                            <div class="detail-label">Description</div>
                                            <div class="detail-value">${project.c_Project_Description}</div>
                                        </div>
                                        <div class="detail-item">
                                            <div class="detail-label">Project Link</div>
                                            <div class="detail-value">
                                                <a href="${project.c_ProjectLink}" class="project-link" target="_blank" rel="noopener noreferrer">
                                                    ${project.c_ProjectLink}
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="project-actions">
                                        <button class="edit-btn" onclick="editProject(${project.c_ProjectID})">
                                            <i class="fas fa-edit"></i> Edit
                                        </button>
                                        <button class="delete-btn" onclick="removeProject(${project.c_ProjectID})">
                                            <i class="fas fa-trash"></i> Delete
                                        </button>
                                    </div>
                                </div>
                            `;
                        projectList.append(card);
                    });
                },
                error: function () {
                    $("#projectList").html(`
                            <div class="alert alert-danger">
                                Error loading projects. Please try again later.
                            </div>
                        `);
                }
            });
        }

        function removeProject(id) {
            Swal.fire({
                title: "Are you sure?",
                text: "This project will be permanently deleted!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#4361ee",
                cancelButtonColor: "#6c757d",
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "Cancel"
            }).then((result) => {
                if (result.isConfirmed) {
                    // Show loading state
                    $("#projectList").html(`
                            <div class="loading-state">
                                <div class="loading-spinner"></div>
                            </div>
                        `);

                    $.ajax({
                        url: `http://localhost:5086/api/UserDetails/DeleteUserProject/${id}`,
                        type: "DELETE",
                        success: function () {
                            Swal.fire({
                                title: "Deleted!",
                                text: "Your project has been removed.",
                                icon: "success",
                                timer: 1500,
                                showConfirmButton: false
                            });
                            loadProjects();
                        },
                        error: function () {
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to delete project. Please try again.",
                                icon: "error",
                                confirmButtonColor: "#4361ee"
                            });
                            loadProjects();
                        }
                    });
                }
            });
        }

        function editProject(id) {
            // Show loading state
            $("#projectList").html(`
                    <div class="loading-state">
                        <div class="loading-spinner"></div>
                    </div>
                `);

            $.ajax({
                url: `http://localhost:5086/api/UserDetails/GetOneProject/${id}`,
                type: "GET",
                success: function (project) {
                    if (!project || !project.data) {
                        Swal.fire({
                            title: "Error!",
                            text: "Project not found",
                            icon: "error",
                            confirmButtonColor: "#4361ee"
                        });
                        loadProjects();
                        return;
                    }

                    // Populate form
                    $("#projectid").val(project.data.c_ProjectID);
                    $("#projectTitle").val(project.data.c_Project_Title);
                    $("#projectDescription").val(project.data.c_Project_Description);
                    $("#technologiesUsed").val(project.data.c_TechnologiesUsed);
                    $("#projectLink").val(project.data.c_ProjectLink);

                    // Change button to "Update Project"
                    $(".save-btn").attr("onclick", "updateProject()").html('<i class="fas fa-save me-2"></i>Update Project');

                    // Show form
                    showProjectForm();
                    loadProjects();
                },
                error: function () {
                    Swal.fire({
                        title: "Error!",
                        text: "Failed to load project details. Please try again.",
                        icon: "error",
                        confirmButtonColor: "#4361ee"
                    });
                    loadProjects();
                }
            });
        }

        function updateProject() {
            let id = $("#projectid").val();
            let projectTitle = $("#projectTitle").val().trim();
            let projectDescription = $("#projectDescription").val().trim();
            let technologiesUsed = $("#technologiesUsed").val().trim();
            let projectLink = $("#projectLink").val().trim();

            // Validation
            if (!projectTitle || !projectDescription || !technologiesUsed || !projectLink) {
                Swal.fire({
                    title: "Missing Information",
                    text: "Please fill in all required fields",
                    icon: "warning",
                    confirmButtonColor: "#4361ee"
                });
                return;
            }

            // Validate URL format
            try {
                new URL(projectLink);
            } catch (e) {
                Swal.fire({
                    title: "Invalid URL",
                    text: "Please enter a valid project URL (e.g., https://yourproject.com)",
                    icon: "warning",
                    confirmButtonColor: "#4361ee"
                });
                return;
            }

            let formData = new FormData();
            formData.append("c_ProjectID", id);
            formData.append("c_user_id", userId);
            formData.append("c_Project_Title", projectTitle);
            formData.append("c_Project_Description", projectDescription);
            formData.append("c_TechnologiesUsed", technologiesUsed);
            formData.append("c_ProjectLink", projectLink);

            // Show loading state
            $("#projectList").html(`
                    <div class="loading-state">
                        <div class="loading-spinner"></div>
                    </div>
                `);

            $.ajax({
                url: "http://localhost:5086/api/UserDetails/UpdateUserProject/",
                type: "PUT",
                data: formData,
                contentType: false,
                processData: false,
                success: function () {
                    Swal.fire({
                        title: "Success!",
                        text: "Project updated successfully",
                        icon: "success",
                        timer: 1500,
                        showConfirmButton: false
                    });
                    loadProjects();
                    hideProjectForm();
                },
                error: function () {
                    Swal.fire({
                        title: "Error!",
                        text: "Failed to update project. Please try again.",
                        icon: "error",
                        confirmButtonColor: "#4361ee"
                    });
                    loadProjects();
                }
            });
        }
    </script>
}