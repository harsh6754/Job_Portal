@{
    ViewData["Title"] = "Job Search";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}
<style>
    :root {
        --primary-color: #2563eb;
        --primary-hover: #1d4ed8;
        --secondary-color: #6b7280;
        --light-bg: #f8fafc;
        --border-color: #e5e7eb;
        --skill-bg: #e0e7ff;
        --skill-text: #3730a3;
    }

    .job-details-container {
        max-width: 800px;
        margin: 0 auto 40px auto;
        padding: 30px;
        background-color: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        border: 1px solid var(--border-color);
    }

    .job-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 25px;
        padding-bottom: 20px;
        border-bottom: 1px solid var(--border-color);

    }

    .job-header .title {
        font-size: 28px;
        font-weight: 700;
        color: #111827;
        margin-bottom: 8px;
    }

    .job-header .company {
        font-size: 18px;
        color: var(--secondary-color);
        margin-bottom: 12px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .job-header .company-name {
        font-weight: 600;
        color: #374151;
    }

    .job-header .location {
        display: flex;
        align-items: center;
        gap: 5px;
        color: var(--secondary-color);
        font-size: 16px;
    }

    .job-header .logo {
        width: 80px;
        height: 80px;
        border-radius: 12px;
        overflow: hidden;
        border: 1px solid var(--border-color);
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #fff;
    }

    .job-header .logo img {
        width: 100%;
        height: 100%;
        object-fit: contain;
    }

    .job-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-bottom: 25px;
        padding-bottom: 20px;
        border-bottom: 1px solid var(--border-color);
    }

    .meta-item {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .meta-icon {
        color: var(--primary-color);
        font-size: 18px;
    }

    .meta-text {
        font-size: 15px;
    }

    .meta-label {
        color: var(--secondary-color);
        font-weight: 500;
    }

    .meta-value {
        color: #111827;
        font-weight: 600;
    }

    .job-details {
        font-size: 16px;
        color: #374151;
        line-height: 1.7;
    }

    .section-title {
        font-size: 20px;
        font-weight: 700;
        color: #111827;
        margin: 25px 0 15px;
        position: relative;
        padding-bottom: 8px;
    }

    .section-title::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 50px;
        height: 3px;
        background-color: var(--primary-color);
        border-radius: 3px;
    }

    .job-details ul {
        margin: 0 0 20px;
        padding-left: 22px;
    }

    .job-details li {
        margin-bottom: 8px;
    }

    .skills-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin: 15px 0 25px;
    }

    .skill {
        background-color: var(--skill-bg);
        color: var(--skill-text);
        padding: 6px 14px;
        border-radius: 20px;
        font-size: 14px;
        font-weight: 500;
        transition: all 0.2s ease;
    }

    .skill:hover {
        background-color: #c7d2fe;
        transform: translateY(-2px);
    }

    .posted-time {
        font-size: 14px;
        color: var(--secondary-color);
        margin-top: 10px;
        font-style: italic;
    }

    .apply-btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 12px 28px;
        background-color: var(--primary-color);
        color: #fff;
        text-decoration: none;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 600;
        margin-top: 30px;
        transition: all 0.2s ease;
        border: none;
        cursor: pointer;
        gap: 8px;
    }

    .apply-btn:hover {
        background-color: var(--primary-hover);
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(37, 99, 235, 0.2);
    }

    .company-info-container {
        max-width: 800px;
        margin: 30px auto;
        padding: 30px;
        background-color: var(--light-bg);
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        border: 1px solid var(--border-color);
    }

    .company-info-header {
        font-size: 22px;
        font-weight: 700;
        color: #111827;
        margin-bottom: 20px;
        padding-bottom: 12px;
        border-bottom: 1px solid var(--border-color);
    }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
    }

    .info-item {
        display: flex;
        align-items: flex-start;
        gap: 12px;
    }

    .info-icon {
        color: var(--primary-color);
        font-size: 20px;
        margin-top: 2px;
    }

    .info-content h6 {
        font-size: 16px;
        font-weight: 600;
        color: #374151;
        margin: 0 0 4px;
    }

    .info-content p,
    .info-content a {
        font-size: 15px;
        color: var(--secondary-color);
        margin: 0;
        transition: color 0.2s ease;
    }

    .info-content a:hover {
        color: var(--primary-color);
        text-decoration: underline;
    }

    .about-company {
        margin-top: 25px;
    }

    .about-title {
        font-size: 18px;
        font-weight: 600;
        color: #111827;
        margin-bottom: 12px;
    }

    .company-description {
        font-size: 15px;
        color: #4b5563;
        line-height: 1.7;
    }

    @@media (max-width: 768px) {
        .job-header {
            flex-direction: column;
            gap: 20px;
        }

        .job-header .logo {
            align-self: flex-start;
        }

        .job-meta {
            gap: 15px;
        }

        .job-details-container,
        .company-info-container {
            padding: 20px;
            margin: 20px auto;

        }
    }

    .back-button {
        background-color: #2563eb;
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        margin-bottom: 20px;
        display: inline-block;
    }

    .back-button:hover {
        background-color: #1d4ed8;
    }

    .ats-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
        overflow: hidden;
        transition: all 0.3s ease;
    }

    .ats-card-header {
        background: #f8f9fa;
        padding: 1rem;
        border-bottom: 1px solid #e9ecef;
    }

    .ats-card-header h5 {
        margin: 0;
        color: #495057;
        font-weight: 600;
    }

    #atsAnalysis {
        padding: 1.5rem;
    }

    .match-score {
        font-size: 2.5rem;
        font-weight: 700;
        text-align: center;
        margin-bottom: 1.5rem;
        color: #4361ee;
    }

    .match-score.high {
        color: #2ecc71;
    }

    .match-score.low {
        color: #e74c3c;
    }

    .skills-section {
        margin-bottom: 1.5rem;
    }

    .skills-section h6 {
        font-weight: 600;
        margin-bottom: 0.75rem;
        color: #495057;
    }

    .skills-list {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .skills-list .badge {
        padding: 0.5rem 0.75rem;
        font-weight: 500;
        border-radius: 6px;
    }

    .matching-skills .badge {
        background-color: #2ecc71;
        color: white;
    }

    .missing-skills .badge {
        background-color: #dc3545;
        color: white;
    }
    .recommendations {
        margin-top: 2rem;
    }

    .recommendations li {
        margin-bottom: 1rem;
        display: flex;
        align-items: flex-start;
        gap: 0.75rem;
        font-size: 0.9rem;
        line-height: 1.5;
    }

    .recommendations li i {
        color: #4361ee;
        margin-top: 0.25rem;
    }
    .more-skills {
        background-color: #6c757d !important;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .more-skills:hover {
        background-color: #5a6268 !important;
        transform: translateY(-2px);
    }

    .more-skills.expanded {
        background-color: #4361ee !important;
    }

    .additional-skill {
        animation: fadeIn 0.3s ease-in-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .recommendations {
        margin-top: 2rem;
    }

    .recommendations h6 {
        font-weight: 600;
        margin-bottom: 0.75rem;
        color: #495057;
    }

    .recommendations li {
        margin-bottom: 0.5rem;
        color: #495057;
    }

    .recommendations i {
        color: #4361ee;
        margin-right: 0.5rem;
    }

    .match-high {
        border-left: 4px solid #2ecc71;
    }

    .match-low {
        border-left: 4px solid #e74c3c;
    }

    /* Container spacing */
    .container-fluid.mt-4 {
        margin-top: 2rem !important;
        margin-bottom: 2rem;
        padding: 0 2rem; /* Add horizontal padding */
    }

    /* Row spacing */
    .row {
        --bs-gutter-x: 2rem;
        margin-right: calc(var(--bs-gutter-x) * -.5);
        margin-left: calc(var(--bs-gutter-x) * -.5);
        display: flex; /* Ensure flex display */
        flex-wrap: wrap; /* Allow wrapping on smaller screens */
    }

    /* Column styles */
    .col-lg-8, .col-lg-4 {
        padding-right: calc(var(--bs-gutter-x) * .5);
        padding-left: calc(var(--bs-gutter-x) * .5);
    }

    /* ATS card sticky positioning */
    .col-lg-4 {
        position: sticky;
        top: 2rem;
        height: fit-content;
        align-self: flex-start; /* Align to top */
    }

    /* ATS card styles */
    .ats-card {
        position: sticky;
        top: 2rem;
        height: fit-content;
        max-width: 100%;
        overflow: hidden;
    }

    /* Responsive breakpoints */
    @@media (min-width: 992px) {
        .row {
            flex-wrap: nowrap; /* Prevent wrapping on larger screens */
        }
        
        .col-lg-8 {
            flex: 0 0 66.666667%;
            max-width: 66.666667%;
        }
        
        .col-lg-4 {
            flex: 0 0 33.333333%;
            max-width: 33.333333%;
        }
    }

    @@media (max-width: 991px) {
        .container-fluid.mt-4 {
            padding: 0 1rem;
        }
        
        .col-lg-8, .col-lg-4 {
            flex: 0 0 100%;
            max-width: 100%;
        }
        
        .ats-card {
            margin-top: 2rem;
            position: static; /* Remove sticky positioning on mobile */
        }
    }
    
    /* Report Button */
    .btn-outline-danger {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        background-color: transparent;
        color: #ef4444;
        border: 1px solid #ef4444;
        padding: 12px 28px;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 600;
        margin-top: 30px;
        transition: all 0.2s ease;
        cursor: pointer;
    }

    .btn-outline-danger:hover {
        background-color: #ef4444;
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(239, 68, 68, 0.2);
    }

    /* Report Job Modal */
    .report-modal {
        display: none;
        position: fixed;
        z-index: 1050;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        overflow: auto;
    }

    .report-modal-content {
        background-color: #fefefe;
        margin: 5% auto;
        max-width: 600px;
        border-radius: 12px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        animation: modalFadeIn 0.3s ease;
    }

    .report-modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px;
        border-bottom: 1px solid var(--border-color);
    }

    .report-modal-title {
        margin: 0;
        font-size: 20px;
        font-weight: 700;
        color: #111827;
        display: flex;
        align-items: center;
    }

    .report-modal-title i {
        color: #ef4444;
        margin-right: 10px;
    }

    .close-report-modal {
        color: #6b7280;
        font-size: 24px;
        font-weight: 700;
        cursor: pointer;
        transition: color 0.2s ease;
    }

    .close-report-modal:hover {
        color: #111827;
    }

    .report-modal-body {
        padding: 20px;
    }

    .report-modal-footer {
        padding: 15px 20px;
        border-top: 1px solid var(--border-color);
        text-align: right;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-label {
        display: block;
        margin-bottom: 8px;
        font-weight: 600;
        color: #374151;
    }

    .form-select {
        width: 100%;
        padding: 12px 15px;
        border: 1px solid var(--border-color);
        border-radius: 8px;
        font-size: 16px;
        color: #374151;
    }

    .form-textarea {
        width: 100%;
        padding: 12px 15px;
        border: 1px solid var(--border-color);
        border-radius: 8px;
        font-size: 16px;
        min-height: 120px;
        resize: vertical;
        color: #374151;
    }

    .form-text {
        font-size: 14px;
        color: #6b7280;
        margin-top: 5px;
    }

    .alert-info {
        background-color: #e0f2fe;
        color: #0369a1;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 20px;
        display: flex;
        align-items: flex-start;
        gap: 12px;
    }

    .btn-cancel {
        background-color: #f3f4f6;
        color: #4b5563;
        border: none;
        padding: 10px 20px;
        border-radius: 6px;
        font-size: 16px;
        font-weight: 500;
        cursor: pointer;
        margin-right: 10px;
        transition: background-color 0.2s ease;
    }

    .btn-cancel:hover {
        background-color: #e5e7eb;
    }

    .btn-report {
        background-color: #ef4444;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 6px;
        font-size: 16px;
        font-weight: 500;
        cursor: pointer;
        transition: background-color 0.2s ease;
    }

    .btn-report:hover {
        background-color: #dc2626;
    }

    @@keyframes modalFadeIn {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .spinner {
        width: 20px;
        height: 20px;
        border: 3px solid rgba(255,255,255,.3);
        border-radius: 50%;
        border-top-color: #fff;
        animation: spin 1s ease-in-out infinite;
        margin-right: 10px;
    }

    @@keyframes spin {
        to { transform: rotate(360deg); }
    }

    .d-flex {
        display: flex;
    }

    .gap-3 {
        gap: 1rem;
    }
</style>

<!-- Back Button -->

<div class="container-fluid mt-4">
    <div class="row">
        <!-- Job Details Section -->
        <div class="col-lg-8">
            <div class="job-details-container" id="jobDetails">
                <!-- Job details will be loaded here -->
            </div>
        </div>

        <!-- ATS Analysis Section -->
        <div class="col-lg-4">
            <div class="ats-card" id="atsAnalysisCard">
            <div class="ats-card-header text-center">
            <h5>ATS Match Analysis</h5>
            </div>
            <div id="atsAnalysis">
            <div class="text-center py-4">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2 text-muted">Analyzing your profile...</p>
            </div>
            </div>
            </div>
        </div>
    </div>
</div>
<!-- Job Report Modal -->
<div id="reportJobModal" class="report-modal">
    <div class="report-modal-content">
        <div class="report-modal-header">
            <h5 class="report-modal-title">
                <i class="fas fa-flag"></i>
                <span id="reportJobModalTitle">Report Job</span>
            </h5>
            <span class="close-report-modal" onclick="closeReportModal()">&times;</span>
        </div>
        <div class="report-modal-body">
            <div class="alert-info">
                <i class="fas fa-info-circle fa-lg"></i>
                <p style="margin: 0">Your report helps us maintain a trustworthy job marketplace. We'll review all reports and take appropriate action.</p>
            </div>
            
            <form id="reportJobForm">
                <input type="hidden" id="reportJobId" name="c_job_id">
                <input type="hidden" id="reportUserId" name="c_user_id">
                
                <div class="form-group">
                    <label for="reportTopic" class="form-label">What's wrong with this job posting?</label>
                    <select id="reportTopic" name="c_report_topic" class="form-select" required>
                        <option value="" selected disabled>Select a reason</option>
                        <option value="Misleading Information">Misleading Information</option>
                        <option value="Discriminatory Content">Discriminatory Content</option>
                        <option value="Suspicious Activity">Suspicious Activity (Scam/Fraud)</option>
                        <option value="Inappropriate Content">Inappropriate Content</option>
                        <option value="Duplicate Posting">Duplicate Posting</option>
                        <option value="Job No Longer Available">Job No Longer Available</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="reportDescription" class="form-label">Please provide details</label>
                    <textarea id="reportDescription" name="c_report_desc" class="form-textarea" 
                        placeholder="Please provide specific details about the issue to help our team investigate properly." required></textarea>
                    <div class="form-text">Your report will remain confidential.</div>
                </div>
            </form>
        </div>
        <div class="report-modal-footer">
            <button type="button" class="btn-cancel" onclick="closeReportModal()">Cancel</button>
            <button type="button" id="submitReportBtn" class="btn-report" onclick="submitJobReport()">
                <i class="fas fa-paper-plane"></i>
                Submit Report
            </button>
        </div>
    </div>
</div>
<!-- Load jQuery first -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Then your custom script that uses $ -->
@* <script src="~/js/your-custom-script.js"></script> *@

<script>
    var matchScore = 0;
    $(document).ready(function () {
        loadJobDetails();
        setTimeout(loadATSAnalysis, 1000);
    });

    function loadATSAnalysis() {
        const jobId = new URLSearchParams(window.location.search).get('c_job_id');
        const token = localStorage.getItem('token');
        let userId = null;
        function getUserIdFromToken() {
            let token = localStorage.getItem("token");
            if (!token) return null; // No token found

            let payload = JSON.parse(atob(token.split('.')[1])); // Decode JWT payload
            return payload.uid; // Extract User ID
        }
        userId = getUserIdFromToken();
        @* if (token) {
            const decodedToken = parseJwt(token);
            userId = decodedToken?.uid || decodedToken?.userId || decodedToken?.id;
            console.log('Decoded token:', decodedToken);
        } *@

            // Debug information
            console.log('Token:', token);
        console.log('Current user ID:', userId);
        console.log('Current job ID:', jobId);

        if (!userId || !jobId) {
            $('#atsAnalysis').html(`
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    User ID: ${userId ? userId : 'Not found'}<br>
                    Job ID: ${jobId ? jobId : 'Not found'}<br>
                    Please ensure you are logged in and try again.
                </div>
            `);
            return;
        }

        $.ajax({
            url: 'http://localhost:5086/api/ATSAnalysis/analyze-candidate-job',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                candidateId: parseInt(userId),
                jobId: parseInt(jobId)
            }),
            success: function (response) {
                console.log('ATS Analysis Response:', response);
                const result = response.analysisResult;
                matchScore = result.matchScore;
                const isHighMatch = matchScore >= 70;
                console.log(matchScore);

                $('#atsAnalysisCard')
                    .removeClass('match-high match-low')
                    .addClass(isHighMatch ? 'match-high' : 'match-low');

                const analysisHtml = `
                    <div class="match-score ${isHighMatch ? 'high' : 'low'}">
                        ${matchScore}%
                    </div>
                    <div class="skills-section">
                        <h6>Matching Skills</h6>
                        <div class="skills-list matching-skills">
                            ${result.matchingSkills.map(skill =>
                    `<span class="badge">${skill}</span>`
                ).join('')}
                        </div>
                    </div>
                    <div class="skills-section">
                        <h6>Key Missing Skills</h6>
                        <div class="skills-list missing-skills" id="missingSkillsList">
                            ${result.missingSkills
                        .slice(0, 3) // Take only top 3 most relevant missing skills
                        .map(skill =>
                            `<span class="badge">${skill}</span>`
                        ).join('')}
                            ${result.missingSkills.length > 3 ?
                        `<span class="badge more-skills" onclick="toggleMoreSkills('${result.missingSkills.slice(3).join('|')}')">+${result.missingSkills.length - 3} more</span>`
                        : ''}
                        </div>
                        <small class="text-muted">Showing most relevant missing skills for this position</small>
                    </div>
                    <div class="recommendations">
                        <h6>Key Recommendations</h6>
                        <ul class="list-unstyled">
                            ${result.recommendations.slice(0, 2).map(rec =>
                            `<li><i class="fas fa-arrow-right"></i>${rec}</li>`
                        ).join('')}
                        </ul>
                    </div>
                `;

                $('#atsAnalysis').html(analysisHtml);
            },
            error: function (xhr, status, error) {
                console.error('ATS Analysis Error:', { xhr, status, error });
                $('#atsAnalysis').html(`
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-circle me-2"></i>
                        Failed to load ATS analysis. Please try again later.
                        <br><small>Error: ${error}</small>
                    </div>
                `);
            }
        });
    }

    // Function to toggle more skills
    function toggleMoreSkills(moreSkillsString) {
        const missingSkillsList = document.getElementById('missingSkillsList');
        const moreSkillsBadge = missingSkillsList.querySelector('.more-skills');

        if (moreSkillsBadge) {
            // Check if we're currently showing the expanded view
            const isExpanded = moreSkillsBadge.classList.contains('expanded');

            if (isExpanded) {
                // Collapse the view
                moreSkillsBadge.classList.remove('expanded');
                const count = moreSkillsString.split('|').length;
                moreSkillsBadge.innerHTML = `+${count} more`;

                // Remove the additional skills
                const additionalSkills = missingSkillsList.querySelectorAll('.additional-skill');
                additionalSkills.forEach(skill => skill.remove());
            } else {
                // Expand the view
                moreSkillsBadge.classList.add('expanded');
                moreSkillsBadge.innerHTML = 'Show less';

                // Add the additional skills
                const moreSkills = moreSkillsString.split('|');
                moreSkills.forEach(skill => {
                    const skillBadge = document.createElement('span');
                    skillBadge.className = 'badge additional-skill';
                    skillBadge.textContent = skill;
                    missingSkillsList.insertBefore(skillBadge, moreSkillsBadge);
                });
            }
        }
    }
</script>
<script>
    function getUserIdFromToken() {
        let token = localStorage.getItem("token");
        if (!token) return null; // No token found

        let payload = JSON.parse(atob(token.split('.')[1])); // Decode JWT payload
        return payload.uid; // Extract User ID
    }

    // Get User ID dynamically
    var userId = getUserIdFromToken();
    var companyId;
    $(document).ready(function () {
        loadJobDetails();
    });
    function timeAgo(dateString) {
        const [datePart, timePart] = dateString.split(' ');
        const [day, month, year] = datePart.split('-');
        const [hours, minutes, seconds] = timePart.split(':');
        const posted = new Date(year, month - 1, day, hours, minutes, seconds);
        const now = new Date();
        const diffInMs = now - posted;
        const diffInMinutes = Math.floor(diffInMs / (1000 * 60));
        const diffInHours = Math.floor(diffInMs / (1000 * 60 * 60));
        const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24));
        if (diffInMinutes < 60) {
            return `${diffInMinutes} minute${diffInMinutes === 1 ? '' : 's'} ago`;
        } else if (diffInHours < 24) {
            return `${diffInHours} hour${diffInHours === 1 ? '' : 's'} ago`;
        } else {
            return `${diffInDays} day${diffInDays === 1 ? '' : 's'} ago`;
        }
    }
    function formatDescription(description) {
        if (!description) return '<ul><li>No description available</li></ul>';
        // Split by period, trim whitespace, filter out empty strings
        const sentences = description.split('.')
            .map(sentence => sentence.trim())
            .filter(sentence => sentence.length > 0);
        // Map to list items and join
        const listItems = sentences.map(sentence => `<li>${sentence}</li>`).join('');
        return `<ul>${listItems}</ul>`;
    }

    function loadJobDetails() {
        const urlParams = new URLSearchParams(window.location.search);
        const jobId = urlParams.get('c_job_id');
        if (!jobId) {
            $("#jobDetails").html("<p>No job ID provided.</p>");
            return;
        }

        $.ajax({
            url: `http://localhost:5086/api/postedjob/getJobDescription?id=${jobId}`,
            dataType: "json",
            success: function (job) {
                companyId =job.company.c_company_id;

                console.log("Job Details:", job);
                const skillsArray = job.c_skills ? job.c_skills.split(',').map(skill => skill.trim()) : [];
                const descriptionHtml = formatDescription(job.c_job_desc);
                const html = `
                    <div class="job-header">
                        <div>
                            <h1 class="title">${job.c_job_title || "No Title"}</h1>
                            <div class="company">
                                <span class="company-name">${job.company?.c_company_name || "Unknown Company"}</span>
                                <span class="location">
                                    <i class="fas fa-map-marker-alt"></i>
                                    ${job.c_job_location || "N/A"}
                                </span>
                            </div>
                        </div>
                        <div class="logo" onclick="${job.company && job.company.c_company_id ? `window.location.href='/CandidateJob/CompanyProfile?companyId=${job.company.c_company_id}'` : 'alert(\'Company profile not available.\')'}" style="cursor: pointer;">
                                <img src="${job.company?.c_company_logo || '/default-logo.png'}" alt="Company Logo" width="50px" height="50px" style="border-radius: 50%;" />
                            </div>
                    </div>

                    <div class="job-meta">
                        <div class="meta-item">
                            <i class="fas fa-briefcase meta-icon"></i>
                            <div class="meta-text">
                                <span class="meta-label">Job Type</span>
                                <span class="meta-value">${job.c_job_type || "Not specified"}</span>
                            </div>
                        </div>

                        <div class="meta-item">
                            <i class="fas fa-clock meta-icon"></i>
                            <div class="meta-text">
                                <span class="meta-label">Experience</span>
                                <span class="meta-value">${job.c_job_experience || "N/A"} Years</span>
                            </div>
                        </div>

                        <div class="meta-item">
                            <i class="fas fa-money-bill-wave meta-icon"></i>
                            <div class="meta-text">
                                <span class="meta-label">Salary</span>
                                <span class="meta-value">₹ ${job.c_salary_range || "Not disclosed"}</span>
                            </div>
                        </div>

                        <div class="meta-item">
                            <i class="fas fa-users meta-icon"></i>
                            <div class="meta-text">
                                <span class="meta-label">Vacancies</span>
                                <span class="meta-value">${job.c_vacancy || "N/A"}</span>
                            </div>
                        </div>
                    </div>

                    <div class="job-details">
                        <h3 class="section-title">Job Description</h3>
                        ${descriptionHtml}

                        <h3 class="section-title">Requirements</h3>
                        <div class="meta-item" style="margin-bottom: 15px;">
                            <i class="fas fa-graduation-cap meta-icon"></i>
                            <div class="meta-text">
                                <span class="meta-label">Qualification</span>
                                <span class="meta-value">${job.c_qualification_title || "Not specified"}</span>
                            </div>
                        </div>

                        <div class="meta-item" style="margin-bottom: 15px;">
                            <i class="fas fa-building meta-icon"></i>
                            <div class="meta-text">
                                <span class="meta-label">Department</span>
                                <span class="meta-value">${job.department?.c_deptname || "Not specified"}</span>
                            </div>
                        </div>

                        <h3 class="section-title">Skills Required</h3>
                        <div class="skills-container">
                            ${skillsArray.length ? skillsArray.map(skill => `<div class="skill">${skill}</div>`).join('') : '<div class="skill">Not specified</div>'}
                        </div>

                        <p class="posted-time">Posted ${job.c_post_date ? timeAgo(job.c_post_date) : "N/A"}</p>

                        <div class="d-flex gap-3">
                            <button class="apply-btn">
                                <i class="fas fa-paper-plane"></i>
                                Apply Now
                            </button>
                            
                            <button class="btn btn-outline-danger" onclick="openReportJobModal(${job.c_job_id}, '${job.c_job_title}')">
                                <i class="fas fa-flag me-2"></i>
                                Report Job
                            </button>
                        </div>
                    </div>

                    <div class="company-info-container">
                        <h3 class="company-info-header">About the Company</h3>

                        <div class="info-grid">
                            <div class="info-item">
                                <i class="fas fa-envelope info-icon"></i>
                                <div class="info-content">
                                    <h6>Email</h6>
                                    <a href="mailto:${job.company.c_company_email}">${job.company.c_company_email || "Not provided"}</a>
                                </div>
                            </div>

                            <div class="info-item">
                                <i class="fas fa-map-marker-alt info-icon"></i>
                                <div class="info-content">
                                    <h6>Location</h6>
                                    <p>${job.company.c_company_address || "Not provided"}</p>
                                </div>
                            </div>

                            <div class="info-item">
                                <i class="fas fa-globe info-icon"></i>
                                <div class="info-content">
                                    <h6>Website</h6>
                                    <a href="${job.company.c_company_website}" target="_blank">${job.company.c_company_website || "Not provided"}</a>
                                </div>
                            </div>
                        </div>

                        <div class="about-company">
                            <h6 class="about-title">Company Description</h6>
                            <p class="company-description">${job.company.c_company_description || "No company description available."}</p>
                        </div>
                    </div>
                `;
                $("#jobDetails").html(html);
                checkUserApplyStatus(job.c_job_id);
            },
            error: function (xhr, status, error) {
                console.error("Error fetching job details:", status, error);
                $("#jobDetails").html(`
                    <div class="error-message" style="text-align: center; padding: 40px;">
                        <i class="fas fa-exclamation-triangle" style="font-size: 48px; color: #ef4444; margin-bottom: 20px;"></i>
                        <h3 style="color: #111827; margin-bottom: 10px;">Failed to load job details</h3>
                        <p style="color: var(--secondary-color);">Please try again later or contact support if the problem persists.</p>
                        <button onclick="window.location.reload()" style="margin-top: 20px; padding: 10px 20px; background-color: var(--primary-color); color: white; border: none; border-radius: 6px; cursor: pointer;">
                            <i class="fas fa-sync-alt"></i> Refresh Page
                        </button>
                    </div>
                `);
            }
        });
    }

    function checkUserApplyStatus(jobId) {
        const userId = getUserIdFromToken();
        if (!userId) return;

        $.ajax({
            url: `http://localhost:5086/api/ApplyJob/UserAppliedStatus?userid=${userId}&jobid=${jobId}`,
            method: 'GET',
            success: function (res) {
                console.log("Applied Status Response:", res);
                if (res.data === 1) {
                    $(".apply-btn").prop("disabled", true).text("Already Applied");
                } else if (res.data === -1) {
                    $(".apply-btn").prop("disabled", false).text("Apply Now");
                } else {
                    $(".apply-btn").prop("disabled", true).text("Unable to Check Status");
                }
            },
            error: function (xhr) {
                console.error("Error getting applied status:", xhr.responseText);
            }
        });
    }


    $(document).on("click", ".apply-btn", function (e) {
        e.preventDefault();
        const urlParams = new URLSearchParams(window.location.search);
        const jobId = urlParams.get('c_job_id');

        if (!userId) {
            Swal.fire("Please login first", "You must be logged in to apply for a job.", "warning");
            return;
        }

        Swal.fire({
            title: "Are you sure?",
            text: "Do you really want to apply for this job?",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, apply now!"
        }).then((result) => {
            if (result.isConfirmed) {
                // Step 1: Check required profile fields
                $.ajax({
                    url: `http://localhost:5086/api/ApplyJob/CheckFields/${userId}`,
                    method: 'GET',
                    success: function (response) {
                        console.log(response);
                        let missingFields = [];
                        if (!response.data.hasEducation) missingFields.push("Education details");
                        if (!response.data.hasProject) missingFields.push("Project");
                        if (!response.data.hasResume) missingFields.push("Resume");

                        if (missingFields.length > 0) {
                            // Show warning if fields are missing
                            Swal.fire({
                                icon: 'warning',
                                title: 'Incomplete Profile!',
                                html: 'Please complete the following before applying:<br><b>' + missingFields.join(', ') + '</b>',
                                confirmButtonText: 'OK'
                            });
                        } else {
                            // Step 2: Proceed to apply if all fields are present
                            var formData = new FormData();
                            formData.append("c_uid", userId);
                            formData.append("c_job_id", jobId);
                            formData.append("c_ats_score", matchScore);

                            $.ajax({
                                url: "http://localhost:5086/api/ApplyJob/ApplyJob",
                                method: "POST",
                                contentType: false,
                                processData: false,
                                data: formData,
                                success: function (res) {
                                    if (res.data == 1) {
                                        Swal.fire({
                                            icon: "success",
                                            title: "Application Successful",
                                            text: "You have successfully applied for this job!",
                                            confirmButtonText: "OK"
                                        }).then(() => {
                                            window.location.reload();
                                        });
                                    } else if (res.data == 2) {
                                        Swal.fire("Warning", "You have already applied for this job!", "warning");
                                    } else {
                                        Swal.fire("Info", res.msg || "Unexpected response.", "info");
                                    }
                                },
                                error: function (xhr) {
                                    console.log("AJAX error: ", xhr);
                                    Swal.fire("Error", "Something went wrong. Please try again later.", "error");
                                }
                            });
                        }
                    },
                    error: function (xhr) {
                        alert(xhr.responseText);
                    }
                });
            }
        });
    });

    // Job Report Functionality
    function openReportJobModal(jobId, jobTitle) {
        // Check if user is logged in
        const userId = getUserIdFromToken();
        if (!userId) {
            Swal.fire("Please login first", "You must be logged in to report a job.", "warning");
            return;
        }
        
        // Set values in form
        document.getElementById('reportJobId').value = jobId;
        document.getElementById('reportUserId').value = userId;
        document.getElementById('reportJobModalTitle').innerText = `Report: ${jobTitle}`;
        
        // Reset form
        document.getElementById('reportJobForm').reset();
        
        // Show modal
        document.getElementById('reportJobModal').style.display = 'block';
        document.body.style.overflow = 'hidden'; // Prevent scrolling
    }
    
    function closeReportModal() {
        document.getElementById('reportJobModal').style.display = 'none';
        document.body.style.overflow = ''; // Enable scrolling
    }
    
    // Close modal when clicking outside of it
    window.onclick = function(event) {
        const modal = document.getElementById('reportJobModal');
        if (event.target === modal) {
            closeReportModal();
        }
    };
    
    function submitJobReport() {
        // Validate form
        const form = document.getElementById('reportJobForm');
        if (!form.checkValidity()) {
            form.reportValidity();
            return;
        }
        
        // Get form data
        const jobId = document.getElementById('reportJobId').value;
        const userId = document.getElementById('reportUserId').value;
        const reportTopic = document.getElementById('reportTopic').value;
        const reportDescription = document.getElementById('reportDescription').value;
        
        // Show loading state
        const submitBtn = document.getElementById('submitReportBtn');
        const originalBtnContent = submitBtn.innerHTML;
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<div class="spinner"></div> Submitting...';
        
        // Submit report via AJAX
        @* const reportData = {
            c_job_id: parseInt(jobId),
            c_user_id: parseInt(userId),
            c_report_topic: reportTopic,
            c_report_desc: reportDescription
        }; *@

        var formData = new FormData();
        formData.append("c_job_id",jobId);
        formData.append("c_user_id",userId);
        formData.append("c_report_topic",reportTopic);
        formData.append("c_report_desc",reportDescription);
        formData.append("c_company_id",companyId);

        console.log([...formData]);
        $.ajax({
            url: 'http://localhost:5086/api/JobPostReport/SaveJobPostReport',
            type: 'POST',
            contentType: false,
            processData : false,
            data: formData,
            success: function(response) {
                // Close modal
                closeReportModal();
                
                // Show success message
                Swal.fire({
                    icon: 'success',
                    title: 'Report Submitted',
                    text: 'Thank you for your report. Our team will review it shortly.',
                    confirmButtonColor: '#2563eb'
                });
            },
            error: function(xhr, status, error) {
                console.error('Error submitting report:', error);
                
                Swal.fire({
                    icon: 'error',
                    title: 'Submission Failed',
                    text: 'There was a problem submitting your report. Please try again later.',
                    confirmButtonColor: '#2563eb'
                });
            },
            complete: function() {
                // Reset button state
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalBtnContent;
            }
        });
    }
</script>
